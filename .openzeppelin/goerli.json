{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1373731F88cCbfc56D2854116dbb0e5588717e0f",
      "txHash": "0xf7730524ca4db0b404730c89d99328929ecf105611f03acc367180f2f4fe961e",
      "kind": "uups"
    },
    {
      "address": "0xad0afC855D860530DF89F170cD450a8CE8B9CbED",
      "txHash": "0x339dd68755780180ea67013d4aaeae4ceb2455ab8959389d5fbd66b303be095b",
      "kind": "uups"
    },
    {
      "address": "0x50Cc6B8704F78Fe7da909887F43796b7800fe120",
      "txHash": "0xee037d4d37cf39eb819c6c6a4b41726db0f6712bb7c182f30743b74d6d0362df",
      "kind": "uups"
    },
    {
      "address": "0x1936Db97984fAE1d507527BbEb69B258169Af9e5",
      "txHash": "0xa40c30c4ee1ec03bd4409750ec453317c5d25c5f93f05e48da130f0efd293e3a",
      "kind": "uups"
    },
    {
      "address": "0x111eD1dc7E461BEda994A3aE7c18864A43695B75",
      "txHash": "0xeeaab4ce3eabd6a93145acd8c02d237912a72baa9ab0496cc2fab0bab1042f74",
      "kind": "uups"
    },
    {
      "address": "0x2EA5a4Ca2fc1d78b3779dbe491f5e2E78b0466Db",
      "txHash": "0x469de567c3d4e1d04371635724213abf2f9caec8f858c4e2e3a4cee57769dced",
      "kind": "uups"
    },
    {
      "address": "0xCA707495070e58F46E90CCa6D3f484dB566C18Eb",
      "txHash": "0x2f50271ec1954b9e8071ec469ee34b31aa549d6fa2bb201559c9052d50f2119d",
      "kind": "uups"
    },
    {
      "address": "0x00995Eead0bed6eBB145fC46aDB26295153B7B05",
      "txHash": "0x696ff314445ea6ec9f4636b54382cb3751286b61a82794250bbe442322e99cab",
      "kind": "uups"
    },
    {
      "address": "0x2DCF4eb08Be14229E2b2c14903425fab36B2Cef0",
      "txHash": "0x8874df4b4b3151c5f8eaecf91fb398d9cab8eafa9988ffa7bbd5b63b666440dc",
      "kind": "uups"
    },
    {
      "address": "0xddA34414030fF898C893113e1AFf47efCF72E1bB",
      "txHash": "0x727688ab6c9db8842f0cdd12057553d3cedcc8d82bac91c5a76240e345170ca6",
      "kind": "uups"
    },
    {
      "address": "0xdBbCe2220B0D2cC5B8b8531aC387B307F410a265",
      "txHash": "0xc3a3b5438e5c66efe9aa8cb2114a236d9cce5968eeb71e7fb4522581eaa0046b",
      "kind": "uups"
    },
    {
      "address": "0x1ab6871D1765e10C7d9B56d7941587891C9687EA",
      "txHash": "0x39dc2a74516dbad750b75fad563531cce6bd60bbc36104e5d5f140fddae4d372",
      "kind": "uups"
    },
    {
      "address": "0xd3E5db6b4B0E253Af680Ad876512bf02f9d3Bb30",
      "txHash": "0x10f747d99a2982d51652f91153a21b968db3a398fda17fcadc215c621b446019",
      "kind": "uups"
    },
    {
      "address": "0x8B5509c5F672cc9cF5c975ab124d0aB0122435e8",
      "txHash": "0x23f7dccf687b9b166f74cc79a0772f8db82a39edb92b1907d190c4d740815280",
      "kind": "uups"
    },
    {
      "address": "0xA6D418F964BC1384bc984389C0355aD938bB43b2",
      "txHash": "0x8a34e81b89a06905d0da97ec8f16e63b96360f6e19ad0a39db948b29330233af",
      "kind": "uups"
    },
    {
      "address": "0x4d2Ff5a41aeC3C7BfD0d279B08Aae663EAc6A7c3",
      "txHash": "0xb54d13b95b2465eaa9960b6afb917e7e49fe8413d5b79f730b1ac0121e1dace7",
      "kind": "uups"
    },
    {
      "address": "0xd96F6027dE4DeE0b3ac54b11352A99dc90190d2f",
      "txHash": "0x5b700211de6d83ef8d00e292778da3a755c329b3639c3b41083ca19a59da8ba4",
      "kind": "uups"
    },
    {
      "address": "0xADBe1CaB6944D893aB435C654badbf8bAaa62952",
      "txHash": "0x5e6ff1be0655be2700c72fb1e00d5fd3645938a3dbcfd46d12073bddc5294d4f",
      "kind": "uups"
    },
    {
      "address": "0x0e98bAc59C289b35Fe57dbe665d2Ae938653Aa0a",
      "txHash": "0x167cb3a4ae4d2a8a5d780b972f213c75f06ab6121d271c1266d018c0484e5e27",
      "kind": "uups"
    },
    {
      "address": "0x3b32a80F43B4E3E0F3763aDdD0fE30A70a9e75d5",
      "txHash": "0xc869655b6463aaea395e8b14d0a1fac93245f2f6405189f1cd573fca38ca9465",
      "kind": "uups"
    },
    {
      "address": "0x5A917feC849651170Ef6Dc43fc9416299565CbBb",
      "txHash": "0xb6755ee97e31b6b9fb045fc11945ca4efecf037aac1bcd1da430acb5339aa1bb",
      "kind": "uups"
    },
    {
      "address": "0xAF130D6300cFe06247c7480169D946f8b5a3Fa92",
      "txHash": "0xf3c1fbbe164fe1bf089f0ffc948f90a40f5bcc727070f7e036d0967692e45611",
      "kind": "uups"
    },
    {
      "address": "0xF5fA5a42fFfF5bD778A1Bfd10e23394fc42084bb",
      "txHash": "0xd8fc051c1cf7f72bc48f12fec215a68f429ea450e2037a12da491b4c1bc39ecf",
      "kind": "uups"
    },
    {
      "address": "0xe2B3F377dE59d1AbAdEaDb87CD77e94F8C5fb995",
      "txHash": "0x31380c0aef956906d3ad62be2a1c1b58eba61c65e42b00f1ea461197b4f0e64d",
      "kind": "uups"
    },
    {
      "address": "0x732E96f537d186d543305F7CB8DaD5BF98065d6D",
      "txHash": "0xbaad82b505ad3989ec42f6bcb8092fb249ce2a7ed9e89e2e3aae8e197d6276c5",
      "kind": "uups"
    },
    {
      "address": "0xcadf8b228D989264665136618D1365c94C87EB1f",
      "txHash": "0x9129a461e3c8483be5693ee1675c78ead82eac832ef56528e043010ddeb2e951",
      "kind": "uups"
    },
    {
      "address": "0x21596151b3E67aE539CDafC5e5E1E6e9AA4ABF56",
      "txHash": "0x8a2984f8eadc0c3c7465a05f0fe593143792508113dfc6328b3902b0706c895c",
      "kind": "uups"
    },
    {
      "address": "0x57AE60C3a31a95185Bc41c24d63AEDE0D0ff037d",
      "txHash": "0xe99af996cf20b2970059b972b8df439c1c7d6224ae816e8f1ded4257cd1f706b",
      "kind": "uups"
    },
    {
      "address": "0x025f87b7B58C6D50e53e41c8077cEcE0395E0996",
      "txHash": "0x4403d6e1ebc631c54e28f1f17e14ec4e7e057702cdcc181171b94b83956f516d",
      "kind": "uups"
    },
    {
      "address": "0x6ccC38efC4D832cbb4837A189Feae21a6Cd2AFa6",
      "txHash": "0x29faa2205fa0a2f783104ce0dc06be1ec54af19ac46b4dfec790a0997ade7cf5",
      "kind": "uups"
    },
    {
      "address": "0x659961196c01f98E6d861325f24365bDb9cdC29a",
      "txHash": "0xce0e631a94df1b677bf6bb77611e75ac1929aba5f3a37efda38bb864e24c6d6d",
      "kind": "uups"
    },
    {
      "address": "0x49B0De085468749FBBb5721cC71987c69aB6Ca6b",
      "txHash": "0x0dc1ece5d9e7a5ae4b700203d141ebac3f64de87b6d66932882c20ad4c682a35",
      "kind": "uups"
    },
    {
      "address": "0x5E57d604E5C16fC29A6aB3044D048B9CBbCcc382",
      "txHash": "0x0e05a9aeb3e8d47e077910c6bad312268ee7b82ae29fd29a319d0badeeb1f3d0",
      "kind": "uups"
    },
    {
      "address": "0x82B243A3853Aace16ab9cCB148ce938383d13d33",
      "txHash": "0x7cc2e70b4b762fc38d4819877d321e36a168ba0fe7861c0acd3f53e9d67b5ee8",
      "kind": "uups"
    },
    {
      "address": "0x4F5ECEA710651Ebf8F69B730B8C058e8314beC6F",
      "txHash": "0x7dc405d2feb76ccf0244d52a15c23a2ff77b2d38af521192a8827e5332d7d5e8",
      "kind": "uups"
    },
    {
      "address": "0xdDC80331a1Cf00497eb98D5dee9eea0bc1647d87",
      "txHash": "0xc19b7196af269ce100e9ed42eabf50790c4e689c5181776ca3c95a9514c48570",
      "kind": "uups"
    },
    {
      "address": "0x46a9B1BF2A55Ab3ca0d39dd50449a21d633891e7",
      "txHash": "0x33c1fd1f114180e5c82c4c3dec7ccb4df57667f1f2e6c6a4259fcdd62c08608d",
      "kind": "uups"
    },
    {
      "address": "0x87F908FB4559e384703f6857223f7E0d990A890f",
      "txHash": "0xad6633edec5069dfd8dfffd3fc394185c629e390cc314628c19fccaea84a1132",
      "kind": "uups"
    },
    {
      "address": "0xCa2F60EFDA0104fab9ACfb892739012EcfebE54e",
      "txHash": "0x2f432408735a58b55bd77b7431e8251cbc7a6db7435de260b1c80e3474ea053d",
      "kind": "uups"
    },
    {
      "address": "0x8cd8d0d12f310819ffB7BA37cF111112509D86a7",
      "txHash": "0x9b8773d19ba39f9b9b7b52ba88aa94592005b601d9d50ae9357fd6836c087c65",
      "kind": "uups"
    },
    {
      "address": "0x01676Bb15530162933FbfF66028fF233AdE8d419",
      "txHash": "0x6f872cbc858daca9183673901e7303f774e5edd1ca9a9a70724fd8cc923a57ea",
      "kind": "uups"
    },
    {
      "address": "0x3C1E2AF7247713AEd3a57935487C0E77c26A4893",
      "txHash": "0x8c7846afb4fbe7f2cd7b1d5fef6cc1e682f133216369a281dacd6ebcb369f060",
      "kind": "uups"
    },
    {
      "address": "0xd55C71FAE6484Cb44Ee3328256df4f5959f1E683",
      "txHash": "0x2c42bc7e8478e4ef83f757fe142a33f83a2a49eee341738ad0e25bff686cb8b0",
      "kind": "uups"
    },
    {
      "address": "0x5B152F0D9771F4b4ac6b6d8246B37b7Fa0d87871",
      "txHash": "0xa1c239f2fd16041a0a0285d0900ea44a3e4d0d381d33a5f570a74164456d5eb0",
      "kind": "uups"
    },
    {
      "address": "0x5B5f616fCF86Ba46CD7505f6b55aA17BC0001a50",
      "txHash": "0x3ff18ad8349d5edf968e704cda8fe8d5e707e36591859e7e3da357c2434df969",
      "kind": "uups"
    },
    {
      "address": "0xcdc3Da32c894e2177f4A055f292741713165A118",
      "txHash": "0x7388850832b74cade9ef3440843a5d60d5ab0701f704674a2a6e1862590a4083",
      "kind": "uups"
    },
    {
      "address": "0x26E79fac6c8702f4d9E60e5cc1c44afB5941B7f6",
      "txHash": "0x3fcf1f9425ac4ba35e255695925506a7d80675872f1f88574868cfa64926ab82",
      "kind": "uups"
    },
    {
      "address": "0x4cf1B752086144a5eaae47362E183f6160Af9459",
      "txHash": "0x74b70b7086db2443981f59062f6fcd1068336b11fbba8a55a8d0397cf54601d1",
      "kind": "uups"
    },
    {
      "address": "0x3fe3Ffb089e0A6a3F1145Be0AEE0f693FA9738E6",
      "txHash": "0x84e1a35c1fd656e4167d7f7d7ba2e4eefcc99c68a51883b4d9d66beba293f7b3",
      "kind": "uups"
    },
    {
      "address": "0xcFb36e3bD95fAf5Ce1F20ACEa8289A191F68c2d2",
      "txHash": "0x844e03bc8e3e0ccd612888ba61883a0b2556f2cc239ee58b60065370379c1fa1",
      "kind": "uups"
    },
    {
      "address": "0xf562D10Eb4e0B9943be1555cC28B256088EBfA4D",
      "txHash": "0x6df41dd10f7de95f23022c1a3f07901c7f80c9e390473ae3c4fbe2a784aa703f",
      "kind": "uups"
    },
    {
      "address": "0x9FE2E0A2cB3cB9B48097C831b38865eb4afB08ab",
      "txHash": "0xd86bdac5bd9bc2eb1f7126b0ff19749854b34333a42f3ccf5950f548e2a33ae7",
      "kind": "uups"
    },
    {
      "address": "0xB31A0b6F6a2494AB751A3B15ea41C309b971CC0D",
      "txHash": "0x394cac45fa277b1537c6d63687c03d81b693610226e25d93118f030004063853",
      "kind": "uups"
    },
    {
      "address": "0x13F0b0581d364c395e21FBD7d4816F3305EAb59f",
      "txHash": "0x8039a267262626459715ce03c7fba2b1ffea4e4b512d00bbd16b14a31a5bbc77",
      "kind": "uups"
    },
    {
      "address": "0x2Cf49a2BdC3A4061C9fBC9dCDff82cD16A05C823",
      "txHash": "0x5ec0cee6eeda81a0e3561d13f8889e690aafcf119763a684849476024da95944",
      "kind": "uups"
    },
    {
      "address": "0xD4027a40dEecD7699b4581f8AfdA9a324Fd270e5",
      "txHash": "0xe2a1e4e112f25007341f74e3a33131bb4b3124b36c754a8fa94a97caccde8f26",
      "kind": "uups"
    },
    {
      "address": "0xC4F4Ce3c4E045b1A2461Cc38476B7D1ECD4b7DB8",
      "txHash": "0x9ebcf7e203d55fa4ed0b503b9d3243f7cebf223d86748ae14c5389ecff53db9c",
      "kind": "uups"
    },
    {
      "address": "0x4Cf4F44DCd75ba00856136a551B625d3391108D8",
      "txHash": "0x2ad0c3cd0c57e97dfe22d180cca66bdf4c7e042389add14d58a0df5bd3cf677d",
      "kind": "uups"
    },
    {
      "address": "0x1F1b188aDfd6206c83E236C228043ba3f9D3f239",
      "txHash": "0x5e6ffb0f099cfac177ba9d6db6f41ef8ace0a50c6ab7a980069d2526f8dbbef1",
      "kind": "uups"
    },
    {
      "address": "0xb2cf72856368C67260Da9c009c1fB17E29BF35eB",
      "txHash": "0xe39f939ba4b0c96d3b44a23f6153aaf237ac757df15fb08c4f2a731f5afc04c6",
      "kind": "uups"
    },
    {
      "address": "0xf6B45F218ACC7742e4cfc4B85423849E977E7B3c",
      "txHash": "0x702912c27190d5f27f07682c0fb493765045f41237e90e24a016241e105cee18",
      "kind": "uups"
    },
    {
      "address": "0x21F016714060a91C17f64469dD6bEe3C2fddCE1E",
      "txHash": "0x8eb83812e2acdac792d0e8b3fbc6afb188e38665209585bfb9e9c8002b42ac8b",
      "kind": "uups"
    },
    {
      "address": "0x074952F6D2E58540Bc9641D0c2196a22Ee3e3970",
      "txHash": "0xd76450dd5dcbe8397e6a48db1fe70d04faf796fa8a7583173b73d8d883c03c6b",
      "kind": "uups"
    },
    {
      "address": "0x4a2180A45E54E91467CB6B4D0618c3C3dd9e8f30",
      "txHash": "0xbc99f4d57f9c2be349b3f2112049165f83e490ac05a3190942a34ad3190e5dd7",
      "kind": "uups"
    },
    {
      "address": "0x3445a5FbFaeEd4c86d713e857B89eB2543f7d94F",
      "txHash": "0xa7e6aad5163a989bc3746e688dd8fdc75337d8090b34a522fe52926e20f1ccb6",
      "kind": "uups"
    },
    {
      "address": "0xFb3404E08E225471AceF9BE0C1696869dFEf9c07",
      "txHash": "0x78dee2eea8cbc57c22aab714ee013227596b48f07da9377bf68a171d5bf4b36b",
      "kind": "uups"
    },
    {
      "address": "0xb7753E5Ad76B6d7C9F6B99f6b787B9b1934Ea092",
      "txHash": "0xf4aea6600fa3500c631e6ea14e8ff8e927a4289b01b99951961714a1f0b20ab1",
      "kind": "uups"
    },
    {
      "address": "0xa78EC9b478bD2a6eA861A073AC2D9516DF3b50Fb",
      "txHash": "0xca6adf677a094a5bab2fd7088401810b8602e3e98254fb103564d250a2f4c432",
      "kind": "uups"
    },
    {
      "address": "0x052e9C3611151c901d92F6C9A0ac1391454D907b",
      "txHash": "0x3c2f076aecc439f6b7ada8fab982aeadca424ad4bb71497cdeaa0bcd499d239f",
      "kind": "uups"
    },
    {
      "address": "0xf1F1c5dC3A8279a366FBa623F2C8E55A9d1B49bC",
      "txHash": "0x5dd9426d0c23ca355f8271f04b8be0aca39cc9d8a178c5eff38a755e899c8556",
      "kind": "uups"
    },
    {
      "address": "0xBc20406D1774f57bFA75EE6F1de6782143249c63",
      "txHash": "0x157eebaf6d49801ed4758d18ce6e0c7043fda30e44c6604c41e6df3d50a9fe1b",
      "kind": "uups"
    },
    {
      "address": "0x8BC8D1c42Eb34090289f6074cb110eA1863776D2",
      "txHash": "0xbfda96cc05dc305308872314ae978d2a58d94fefb29fc34df5cad08853171380",
      "kind": "uups"
    },
    {
      "address": "0xa03df2c028FF3bf6023ACDA0fcF68D9F0B0ddAa9",
      "txHash": "0x50ccc6968d92570445c8dd471c33e541e5147133ec323c51d5abfef5c7d33770",
      "kind": "uups"
    },
    {
      "address": "0xD8429faa8CB82309C9cC49075424F2cD4fFc73D6",
      "txHash": "0xbf4fe7e328f938dd5c5741c6edb4fcd08a1183f5395d4847194015c398cf7771",
      "kind": "uups"
    },
    {
      "address": "0x8B310d826e8aADdFf60294C28C46171170312cB7",
      "txHash": "0x3e0b36167f43348e2321e2bf21dac1b3872e904b1a798ab26fb5ff8cdd747544",
      "kind": "uups"
    },
    {
      "address": "0x06C39f785305DBa4ead0d07eD7bD2ACcb3229d9F",
      "txHash": "0xdede441648caddcca5e78b3228b1abd273984e2bdaf85abd566c3cc57b8c9d00",
      "kind": "uups"
    },
    {
      "address": "0x10495Da735CB29fe743cc61ACf2ef58EB26715Fe",
      "txHash": "0x767e9f31f454539702000ee33bfffe775e3128303e3d6679f474f325376abe0d",
      "kind": "uups"
    },
    {
      "address": "0xA91017C15270f94629838EFBc5Bd676388da05Eb",
      "txHash": "0x53246a23b2a473952923fc5981f856c84672d81be769eb38d35f4bebe159cbf8",
      "kind": "uups"
    },
    {
      "address": "0x18D4762Ef02b3aebffAFa2b9C1bcc3A061853821",
      "txHash": "0xb471bc67ba6ed2712f5f6f3baaa8288695a150caffbe35ec61a04c25e5735001",
      "kind": "uups"
    },
    {
      "address": "0x2e39bf346e19EB9c738A6eA90306469368e8039E",
      "txHash": "0xb4e798ff8fc5eeb588403394409acdae3890544883748f5922737e298cf85047",
      "kind": "uups"
    },
    {
      "address": "0x659b90403C94c1679fCe2ef0D91C288a6A8Ac874",
      "txHash": "0x556a3feaa4190c0507123d49bc8f397c9c245bd539a5a41371d63303a32b3562",
      "kind": "uups"
    },
    {
      "address": "0xcB9f12a51cBe852C9A2dc59e27c0AEd8Ec92C9CF",
      "txHash": "0xc0a6d0e1e7db6fac43a838278d3c274642e015694458a6a5ad626cf0c56a78b3",
      "kind": "uups"
    },
    {
      "address": "0x555d733b7eA0c865C987748f98d1Dcb434aeb1e9",
      "txHash": "0xdc851e8933f82883ad1299e070745478ae328addca073e4c2519f46a5a05a3a1",
      "kind": "uups"
    },
    {
      "address": "0x6Cb3B8e2A836B6aaFEB52B96a98eB2Fe25321B0C",
      "txHash": "0x3998f48f7e8f4175c16e01544e816ec565016d5fa8ad7e36add0e90e8d12064e",
      "kind": "uups"
    },
    {
      "address": "0x9Fd2cD411FdB768925E2A499726f74C7dF9dA6b4",
      "txHash": "0xa49ef17b7ce741c47a1b265cb9942b5fddb6b2172ec163776e7677c1444f0437",
      "kind": "uups"
    },
    {
      "address": "0x00420A34c204e54fd8B44fA4Ee2F3df930B0d221",
      "txHash": "0xad10db42db03699fd1a72293291e7e976b6f465f1fcbd587fa301f49878e3fb0",
      "kind": "uups"
    },
    {
      "address": "0x7f4F85FFB27072FaF281bdc403179ade6736Aa1E",
      "txHash": "0x3a2105f66ece7bebc0fb6461488bed3eba32efe874f38b9375422c533eb3ee12",
      "kind": "uups"
    },
    {
      "address": "0x882df37651ebB62e52b977E9802a8d037e83C0E8",
      "txHash": "0x738b35b56bd39eedcb8c0f44e2b9f6ce6125c25c58dea77dd9cd0c90afef37f3",
      "kind": "uups"
    },
    {
      "address": "0x3710a497EDb7a6CDd0f980232d3b9E0e31292E6F",
      "txHash": "0x9ebb46ef1f3f41d993452745d65f5e87db885d398fbf5fd45f193f3237930f5f",
      "kind": "uups"
    },
    {
      "address": "0xb247ff3C3E2C619c9Ec4aD9E0db09065f17d62FB",
      "txHash": "0x474bb8abc5974fd9bc5df8c6d8706a957f846ea1919a362230f80c10e6e9d984",
      "kind": "uups"
    },
    {
      "address": "0x08676Fe1ecb0695c6DDB8136e34905b842eef60c",
      "txHash": "0xdafea3896c96f77591f8d4153731612313177f953613c5a7e6db3508709a5f0d",
      "kind": "uups"
    },
    {
      "address": "0xfE246f0B90F41C02512E2Da2c28Bb03C62dca5c0",
      "txHash": "0xbbb98902de556e75c57492d6ed0f838e0de104f84f64ba59b15b6a667faf34e0",
      "kind": "uups"
    },
    {
      "address": "0x0A7EF25bf72c8B717a03ca479871A002e5eE32c8",
      "txHash": "0x56907a0865a6f808c80f45ea1c51daa254ce1818ab36336045d45ff705e66431",
      "kind": "uups"
    },
    {
      "address": "0xbD65737443294db1438cBcF68BFc2a71afF79EB2",
      "txHash": "0x7e9891e24602290312c780809ac9062edd72c24fe652ef7b2caf5df85702c84e",
      "kind": "uups"
    },
    {
      "address": "0x2aC1Ef0526585535C30aee213281EE2e0E28b7C4",
      "txHash": "0xb143a0059cd9d65887fb39dc289f92dbff4d072023c789d3f5b4554f129b5d2b",
      "kind": "uups"
    },
    {
      "address": "0xCdD5F8f59f6441AF3028Ab0ECfA8aCB7bf68Aaf8",
      "txHash": "0x76e2412caf744f8c0106c5438b857c77d33e3359b96f5926ff1797dbeb57c6b2",
      "kind": "uups"
    },
    {
      "address": "0x045488ad0849C418BC1D5Ad4986961825Ee00C24",
      "txHash": "0x3f29fccc34069a5c48b18b41ba744b51184c6a2b338bffbc504b1718c8751c3a",
      "kind": "uups"
    },
    {
      "address": "0xc47288f54F8a01bDaeE958f37057CE5F067a2e7e",
      "txHash": "0x1f7551bca1c20aac0d8c880a84515b60e18a12af7d5dcb723b35d779fee76e53",
      "kind": "uups"
    },
    {
      "address": "0x831b569b63772FEC6746EED67f6b8d6e01ebc67F",
      "txHash": "0x5a565364a975bf0a1fe1b2f64d3c723fba3eb5eddb0e7d351d7552c3e3609c42",
      "kind": "uups"
    },
    {
      "address": "0xb917bA1360da45936Fc201492702A49eE623A4d6",
      "txHash": "0xd4472a32f5f7c0b0f75bfa8cf0e39b1312397fc3428959e1bb0934d997567155",
      "kind": "uups"
    },
    {
      "address": "0x77C197A5a677D086BA1ae43448C502063b31122f",
      "txHash": "0x5d53c814b1955878565a12e80a831cac7df75b4e3822b4e2e1b040ea0c284a47",
      "kind": "uups"
    },
    {
      "address": "0x4981C5BCE9DAC4744F39b499023685ab03646CaE",
      "txHash": "0x5c00e53af73bdc1f82bbc17337eb64721417889bda3895bf445f5e1c094c7dc1",
      "kind": "uups"
    },
    {
      "address": "0x04ECEBBeE589DdBcfb9E15f0Cd11dc4f6360E18D",
      "txHash": "0x10083fddf361e90d5544920b3503963d1cf19bbec38a47d4022e2bf6198489b1",
      "kind": "uups"
    },
    {
      "address": "0x62209bFdC3C168F91407b33567EC0f080bd0E063",
      "txHash": "0x5777254f9676502007308ba1deacd53ddcd8bed61a147b713146cfd8c70913e7",
      "kind": "uups"
    },
    {
      "address": "0xe6AEB5BE382E0115129e659334df8c71D41fd441",
      "txHash": "0xa4a5862ccb849c94dad4e18a7f3b9609a377368184af92b7fb728656d3d95013",
      "kind": "uups"
    },
    {
      "address": "0x9fd033b94BA72A51ac4AAFBB6868EC4727223e86",
      "txHash": "0x7bacaebaed940f729b7dca7f48bef50e7a6e4d6b349af9e06008960040ecdde2",
      "kind": "uups"
    },
    {
      "address": "0xf81AF1e48725adCDA2aE0085a6bD48E17fD0aB07",
      "txHash": "0xfaf82c1308c176a578d889bf0e59464decec5cb3536768071a1f8be42ddeda35",
      "kind": "uups"
    },
    {
      "address": "0x254aE5719fE07bEF7136408896cE28D584912cca",
      "txHash": "0x6ea708787379d55f204a5f7380ecba526e97ffe82729c815a982a0d6c298ce49",
      "kind": "uups"
    },
    {
      "address": "0x2Dc33A46B6a305052c0830F2893E4B90A667E3cF",
      "txHash": "0x5dfb80a1b6b77dacb56344be8da976a33abb1445bf45a41dcc7f07ce40cb0204",
      "kind": "uups"
    },
    {
      "address": "0xe4baC6a840Fe0235BD5d003582bE2D141C555809",
      "txHash": "0xf9885928665dca3af58b04a33ab0cca112067234180b3f242ba0cc999663f19d",
      "kind": "uups"
    },
    {
      "address": "0x5ce4C9A4934DD04f8b3670B3bC74c6aC41eABfF5",
      "txHash": "0x7d412098dae3768a4efdd99ec65e11f184b9da3b4c275a7e62c12e1e56627f6b",
      "kind": "uups"
    },
    {
      "address": "0xe4d4C80A533aF2085220bc87972574af8589e7b9",
      "txHash": "0x28036a4a0efc5845d8d9f092c0f7168bf8ddd2a2e6c28f1fcffba16d9c143d8e",
      "kind": "uups"
    },
    {
      "address": "0x01aE60d0A87B4517E5D25a03246Ff28A082c57d6",
      "txHash": "0x977ab1065f47141ccacddd8d3de418bde539c915bf6913bcacc54ff2d0ee6140",
      "kind": "uups"
    },
    {
      "address": "0x4bA1302C8aa3079374EEc938C512C4EB47B266E7",
      "txHash": "0x7992a16ce87ce0342b9489fc2aa04f9c65175b1d47f10026e5019071fcd584b8",
      "kind": "uups"
    },
    {
      "address": "0xD47FDc6379C4AA15D7FCE30eE54A05553dBB14ce",
      "txHash": "0x3b5d6826848d23b35ff2a26d52d3e93255822b4e436e5f1b83b730236880b383",
      "kind": "uups"
    },
    {
      "address": "0x4A3DD8bEcB4E355f60ce67b1A03B10ca4a422efC",
      "txHash": "0xa10a7f247155b2ce7625ff8f56b22f0bf2d0da9dec6fbdd3bf21c8f20fd6c44b",
      "kind": "uups"
    },
    {
      "address": "0x5da1E4D0b49E72CefDC1203cC5A9586Cff23c820",
      "txHash": "0x5ca508550b70fe24e45466ddadc2274fcb31cdee7472c19499fa2004e2ac2628",
      "kind": "uups"
    },
    {
      "address": "0xB5f0B2c52B25CD831cc6c115b021a4012B6557d3",
      "txHash": "0xb8ee36fba8309e0423077bb766ac74bc9d11d4cac88336485a8fab7418fa15c4",
      "kind": "uups"
    },
    {
      "address": "0x63E63B440607e27741c6424B07Ca6f0a69373B42",
      "txHash": "0xd78d93c5c306b339499d946dda5afca931d8d926ce590202ec5ed0afad75f0df",
      "kind": "uups"
    },
    {
      "address": "0x4ED9d476A501c87FA2649d7183B2bf70518609FA",
      "txHash": "0x06662fffaffc45963e4e1393f2af25b23f02d3a74f877bd0b09f28016234f1f9",
      "kind": "uups"
    },
    {
      "address": "0x37FAE5015455451d4cd8Df74185e2950A05BD632",
      "txHash": "0xd420f80a3395c4953a16093620924dac66e128de5548ca83a158a6e28d0cd6cf",
      "kind": "uups"
    },
    {
      "address": "0x3b0e278507517567e2E223dee2872Df1B91CBaD7",
      "txHash": "0x61ac912cdf96ab43e78068bae7b92db91528d9f66f46bd896a5cc0813299467f",
      "kind": "uups"
    },
    {
      "address": "0xAA46ce80934ac332a720634742c7a161AaE11565",
      "txHash": "0xb0db032d570e26d0d1ef22587ea04255177f70d5f79b6d661a277669c0564dfb",
      "kind": "uups"
    },
    {
      "address": "0x5DcAD3255Fa49a5dE50141Cb8921e51630bDfcd7",
      "txHash": "0x766e46850eeced79d404cb9c648eefd825bbe2f416406d3c87fea2df6d882b6c",
      "kind": "uups"
    },
    {
      "address": "0xeACC29900CDfC78E3147d4d05294E8BA5841Cc56",
      "txHash": "0x3150df64a4d389f53875cd723989f7bbe77271ea98629dbf7c090030236e4a30",
      "kind": "uups"
    },
    {
      "address": "0x0C4F153579609c45c49E8962851faB6F3846a9A6",
      "txHash": "0x51d38701d032d51613db2165511173b47ffb4def072a1de6a95366fad012b0bf",
      "kind": "uups"
    },
    {
      "address": "0x2523F093a933531dEf78baC3B670970eb1dcB5E0",
      "txHash": "0x6042a763c49ee1e6646492d7b17bc16db42bee7d8a263206130d9ff99b5db1bc",
      "kind": "uups"
    },
    {
      "address": "0xF9a502b6A0583f4fa0e2549577cf0d31f812BB56",
      "txHash": "0x0b78df3b798d1321cc5dd863d7e7f09b625ffcee4017e27e8af390532fef0bf1",
      "kind": "uups"
    },
    {
      "address": "0x977A9ceCA16A3A47EA008988443314b2e6aB3E5B",
      "txHash": "0xa65f6562e06f398de78be51be5bccee90b78af85b8df07581c7be16dc55cf2bc",
      "kind": "uups"
    },
    {
      "address": "0xD1f0ab095fEE282969D10162433B5464B0D5Fcda",
      "txHash": "0xb67edacaec778a3aa963e8174674fa58f95d8de4804c22471a6cdf5e7b1fc880",
      "kind": "uups"
    },
    {
      "address": "0xFDA3c24afCa4285032e84e44216C2B038C0F9aAb",
      "txHash": "0x498ff4aef8067c7f9de58354210948f33a9805a8aa8204bb781de8f14bb280ff",
      "kind": "uups"
    },
    {
      "address": "0x60049d5F3F69345DE0CCC2d530e1A2840ea7dE46",
      "txHash": "0x3a4fc7717890e038dece206e956ffa6ad187901267a40e2f1164b1fea9745e5e",
      "kind": "uups"
    },
    {
      "address": "0x2dA56444AA94Bec488126193cc1A8641466FD4CE",
      "txHash": "0xedbd87bc2f001fb7da93d861192f127da06fdcd684a0c6a0b6d613c3943c0124",
      "kind": "uups"
    },
    {
      "address": "0x7c5A94bA6e8b5D40C4Db092D749fAB4DAe2C811e",
      "txHash": "0xd9798e11396582e9c9fd8eabe36585cd96985b4f60d86cc02ac0bbb841ba37ab",
      "kind": "uups"
    },
    {
      "address": "0x2a1154915744063d30ae6D9FF2431F99d89795b4",
      "txHash": "0xd7dc7ab9651175cff238136a367ced150e612d17febab1062f180663f51c12b4",
      "kind": "uups"
    },
    {
      "address": "0x596bb39Fa3c2daD4Bbe5e46354861153e7408adA",
      "txHash": "0x2e6e80d9873b59cc9ae03b5e471b2bce46c9bd005eb4f66082006e2b2437cb99",
      "kind": "uups"
    },
    {
      "address": "0x82f2d139e9aE75c0e0aB8f06A702dAf7a3E4C5ab",
      "txHash": "0x7e68a096a72292c4fc90729ea83ef1bd6f2f469f23b9434c5ce47848ee95c109",
      "kind": "uups"
    },
    {
      "address": "0x28EC71807ACe83ef506E93231Ad47AD0C96Cc878",
      "txHash": "0x8a7e63bc3a9e0f1ca26fc1d6a242ab2ede35f45ced03eb6da8e1d9c1a80f1b7b",
      "kind": "uups"
    },
    {
      "address": "0x09253d4123a05909F1F4f3a2141644df857c43B5",
      "txHash": "0x150fcea49a0e255ebe805cb7df7ee20703a140a5c257595fffd8c1c8f0c7a966",
      "kind": "uups"
    },
    {
      "address": "0x2f1f4832D4D0f2Fa9876C57FcF266d6CdD3DE3F8",
      "txHash": "0x90a3cf1918948a143e65bdb441598d1b40be10fc0ae70785c8f310a0750dd04f",
      "kind": "uups"
    },
    {
      "address": "0x8963456D4410f01B735831cA47cB84C691a6b894",
      "txHash": "0x4c8f6dfbb528dfb4058a15fef3c5ce4676b322ffb5ab125bc6ddaa9eabebb04b",
      "kind": "uups"
    },
    {
      "address": "0x3945E9B5Fc2b179c8536d9283E69112C0E50d2cA",
      "txHash": "0x11043bf24b0a6ce27b143c1240a794ecfda6b98e7112cb9b11bdfc60ccb7faf7",
      "kind": "uups"
    },
    {
      "address": "0xaF5F58004d0A9f7465790981aCf646F0038F806C",
      "txHash": "0x754237ef3c98f8c9c383243f311e2d5cc13dd896b053c7c98629fc94a5a645a5",
      "kind": "uups"
    },
    {
      "address": "0x7b2510f50551D9c974C617618D8355cd31AdA637",
      "txHash": "0x445d648590a1a5128efbc3da0eabc3f4c77315b496b9158446ef28311ee344f4",
      "kind": "uups"
    },
    {
      "address": "0x2ce412e7653a539205Bdcb4a105572c36EcdDF15",
      "txHash": "0x729a68f94e537d70536eb0a2604826b6694a70e20bc361c6ca5faabe9c77307f",
      "kind": "uups"
    },
    {
      "address": "0x57Dec2c09267e90D894531ba8Aafc460C10f970a",
      "txHash": "0x50432b42b532659d54f46f362b4632ef7a19f2a1d42163a1918f6d0537c258b8",
      "kind": "uups"
    },
    {
      "address": "0xFcDed1dd7980D7d951694764297Ad171B696DAaF",
      "txHash": "0xe40beed503b5d462873695b5b994bbbf6de144a0d2235e5f7f86e47cde79d773",
      "kind": "uups"
    },
    {
      "address": "0x67691c91Fe9Ab25c13D4dAf10db6b54794cf2618",
      "txHash": "0x382bd2836fc2f956b737f8c815b2d5f28c78743a7b4cc641e2eb62c03034cd38",
      "kind": "uups"
    },
    {
      "address": "0x2a3f43f54b172836125A7f00C13A7d8251CE0d9b",
      "txHash": "0x48cd33bc83f975005ca47703674df7b44318cb612486d880943f598b9070fd73",
      "kind": "uups"
    },
    {
      "address": "0xf5408014749715c927Fd607229166E4B75C7790D",
      "txHash": "0xa70980f5791bc1766166f1dbb338f2b43f73a02a2820f28ee81e8cf0d0fb6d10",
      "kind": "uups"
    },
    {
      "address": "0x66009a93A8c922D366b7C8626B6343e42686515F",
      "txHash": "0x1b9bab9587db1bc08ccbfb9bc77b037c592e3f1f3a1818764a3ff42bc2668bda",
      "kind": "uups"
    },
    {
      "address": "0x5AA3c56b8afBf4aDad957e2019233452f1cF8695",
      "txHash": "0x7398a66109dc73350892eddeb29f59d251038e703ce0500f2fd435eb90a2cb91",
      "kind": "uups"
    },
    {
      "address": "0x889C3bF9441bd30C873702ED199f1Adb8eCEF44E",
      "txHash": "0x20b3d57f7dd881bc5abbe442975a670c9cec3b1c847d8d4c254ed3e060556d47",
      "kind": "uups"
    },
    {
      "address": "0xf6f0568B3b44BEf5F22813CbBf5Ba8b738b0165b",
      "txHash": "0xaa614a0838afd40219a3a81d3f196350a3cc5426c8cc4559284d98b7b171da36",
      "kind": "uups"
    },
    {
      "address": "0xea26956b198A238373CaeFE1897Ada8cF07ACA4C",
      "txHash": "0x792b37cc068189deb0437a0b04ec7e569f89cd38c598dca352359538998e2401",
      "kind": "uups"
    },
    {
      "address": "0xdB5428fD5D19bdc88Fe0D6E1b6eBc9F437485EEc",
      "txHash": "0x04a78047ee9de80b5b845798f1380a4cf450698d4962796eae1b3fe0158741b2",
      "kind": "uups"
    },
    {
      "address": "0x6E59c3F748f10d90cD32FE999de0543b5319f8A6",
      "txHash": "0x288b88fbe32d8a8bb05bb6047dca9a2cf8a6ff54ef20e0a8d251ef660d3231f4",
      "kind": "uups"
    },
    {
      "address": "0x2d8463E341bcb1b3EF8a2Fe32eCB00343612BC57",
      "txHash": "0x9c4ddc7229d8a30759dcc8184f687daca986e763d958d8acce632b6df8f8786a",
      "kind": "uups"
    },
    {
      "address": "0x6C57E0c6E6194285A6445EeB5e4848249BD23442",
      "txHash": "0x3b8c94524a94fa74d3f5acfefe1094f154ff6ac8ef45ef343e0c5ebec6e55654",
      "kind": "uups"
    },
    {
      "address": "0x622F6eF56d80b888c164fEFfd1518A3306E22F5F",
      "txHash": "0x1977f13d1761c05c7fc1d8c1f800e72dc965a94a98836c6499ebb413bc68567d",
      "kind": "uups"
    },
    {
      "address": "0x8CFB0c8eb0f66e32440586405F2eb68cF786e604",
      "txHash": "0xf1a5c0ffc2359e9fec65cffeb89a3357c7c2968c074ec9dbca869935116d336f",
      "kind": "uups"
    },
    {
      "address": "0x20a5C44cce2B40961f14D460ba9bf7Fba2eb4dEf",
      "txHash": "0xabd2fe878e277db05fe98d1857ab0d549325027a20215827d5d28a598fdc9ce0",
      "kind": "uups"
    },
    {
      "address": "0x1E907D565E50c8e51271f0f02136dB37EDe09364",
      "txHash": "0x373ca61a66129db620a1c693d44d39a66786517861d9c8f63aa16c1c3a4c542e",
      "kind": "uups"
    },
    {
      "address": "0xF75667D6cf885EBAecc344e154d977E381ea634C",
      "txHash": "0x179a82a1aac41ef941eebb16fe5d53bdabc613ad706024485122e4c33b655460",
      "kind": "uups"
    },
    {
      "address": "0x825D8691E675f4e2693656a98B44BCE8A96485cf",
      "txHash": "0xc2516207d5b54b463019e9aca956709e12393aa92835b6fba33fc715106c5297",
      "kind": "uups"
    },
    {
      "address": "0x6310b77dB11FD64BdFaA31D00212c3Cd2aBaa186",
      "txHash": "0x92a77c6228dc36ee1cb1bc727a0e7f34e1c97d0a2f7cfcd4dc791ed2a79ddc8b",
      "kind": "uups"
    }
  ],
  "impls": {
    "5436a8d49916a9c566193d04aad4f90df09187a38039af0a0d0236156e597b8e": {
      "address": "0xDcD8988A0FcAb79844eb1b31cB03b7720E3fEDfd",
      "txHash": "0x5608c0367a34e2ed8893bc0469af462ae618dcf9be19787f184205cdeceec4e5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13385",
            "contract": "Fees",
            "src": "contracts/Fees.sol:27"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10553",
            "contract": "Fees",
            "src": "contracts/Fees.sol:28"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Liquidity)8791",
            "contract": "Fees",
            "src": "contracts/Fees.sol:29"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeRoles)6083,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:64"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_enum(FeeType)6071,t_struct(Fee)6094_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8791": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10553": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13385": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)6074": {
            "label": "enum Fees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)6083": {
            "label": "enum Fees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)6071": {
            "label": "enum Fees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)6083,t_address_payable)": {
            "label": "mapping(enum Fees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)6083,t_uint256)": {
            "label": "mapping(enum Fees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)6071,t_struct(Fee)6094_storage)": {
            "label": "mapping(enum Fees.FeeType => struct Fees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)6094_storage": {
            "label": "struct Fees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)6074",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)6083,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "15b69ce665b832f004cee2d19ea1cfae478c961fee9b22998a4596730eb6a9f6": {
      "address": "0xb340092497a1956561283cc32573617AEe736a1A",
      "txHash": "0x12570747dd9f0211c4892aa29756901ef6150eabcf6049888c5bbe3168e34d17",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13296",
            "contract": "Fees",
            "src": "contracts/Fees.sol:30"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10463",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Liquidity)8700",
            "contract": "Fees",
            "src": "contracts/Fees.sol:32"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:34"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeRoles)14512,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:36"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_enum(FeeType)14500,t_struct(Fee)14523_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8700": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10463": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13296": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)14503": {
            "label": "enum IFees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)14512": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)14500": {
            "label": "enum IFees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14512,t_address_payable)": {
            "label": "mapping(enum IFees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14512,t_uint256)": {
            "label": "mapping(enum IFees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)14500,t_struct(Fee)14523_storage)": {
            "label": "mapping(enum IFees.FeeType => struct IFees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)14523_storage": {
            "label": "struct IFees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)14503",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)14512,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d97d792365305337e19c562aef6804ced38cd2a856d3950c7b29d1704ff696c6": {
      "address": "0x819838d50187092c32522AF619E36d1846B1C9BF",
      "txHash": "0x7cc69d81026af9c083d77ef68d71e5624f1d1fe0c987eccaff7d928c86f1f488",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13296",
            "contract": "Fees",
            "src": "contracts/Fees.sol:30"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10463",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Liquidity)8700",
            "contract": "Fees",
            "src": "contracts/Fees.sol:32"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:34"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeRoles)14512,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:36"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_enum(FeeType)14500,t_struct(Fee)14523_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8700": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10463": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13296": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)14503": {
            "label": "enum IFees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)14512": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)14500": {
            "label": "enum IFees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14512,t_address_payable)": {
            "label": "mapping(enum IFees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14512,t_uint256)": {
            "label": "mapping(enum IFees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)14500,t_struct(Fee)14523_storage)": {
            "label": "mapping(enum IFees.FeeType => struct IFees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)14523_storage": {
            "label": "struct IFees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)14503",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)14512,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5e7465c636c4c34d18977c36a4ac5c8557dfdc8d133d7106aee8e69dcb2567aa": {
      "address": "0x78610876A60A914e5f03b0aCA95DDfa7Fde9d3f1",
      "txHash": "0x7793c7a5997c3e1f27f40690d24ec8ee9359667b08137aa198a25a5b551f2fec",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13308",
            "contract": "Fees",
            "src": "contracts/Fees.sol:30"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10474",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Liquidity)8710",
            "contract": "Fees",
            "src": "contracts/Fees.sol:32"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:34"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeRoles)14526,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:36"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_enum(FeeType)14514,t_struct(Fee)14537_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8710": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10474": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13308": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)14517": {
            "label": "enum IFees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)14526": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)14514": {
            "label": "enum IFees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14526,t_address_payable)": {
            "label": "mapping(enum IFees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14526,t_uint256)": {
            "label": "mapping(enum IFees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)14514,t_struct(Fee)14537_storage)": {
            "label": "mapping(enum IFees.FeeType => struct IFees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)14537_storage": {
            "label": "struct IFees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)14517",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)14526,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eb24d4cc824f2e608e73d34c9817ff6e250295dcf307f7252328f2acc53f358d": {
      "address": "0x10cAA3E183a5b7D88f5DF90d8bd5deD600296b17",
      "txHash": "0x0d305f645b092d37f091036e60acb44ad73d4418f92daca227165525e71947ad",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13178",
            "contract": "Fees",
            "src": "contracts/Fees.sol:30"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Liquidity)8580",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:33"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_enum(FeeRoles)14486,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:35"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeType)14474,t_struct(Fee)14497_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8580": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13178": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)14477": {
            "label": "enum IFees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)14486": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)14474": {
            "label": "enum IFees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14486,t_address_payable)": {
            "label": "mapping(enum IFees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14486,t_uint256)": {
            "label": "mapping(enum IFees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)14474,t_struct(Fee)14497_storage)": {
            "label": "mapping(enum IFees.FeeType => struct IFees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)14497_storage": {
            "label": "struct IFees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)14477",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)14486,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "85b0f81a9b5898834022ce703be7f81c4362cf643eaea6085684a9df6869a030": {
      "address": "0x86dE474b980E331D49883D21A7628e30F91B2cdA",
      "txHash": "0x822919d6d9a17c1309cd5225cb337b92fb5d3105e16d886b15137318b132c526",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13194",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:29"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10360",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:30"
          },
          {
            "label": "airdropsMerkleRoots",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_enum(FeeRoles)14502,t_mapping(t_uint256,t_bytes32))",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:92"
          },
          {
            "label": "claimedBitMap",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_enum(FeeRoles)14502,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:93"
          },
          {
            "label": "maxBatchSize",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Router)10360": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13194": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeRoles)14502": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14502,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(enum IFees.FeeRoles => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14502,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(enum IFees.FeeRoles => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db2e72805d4ac8a7d6dd85505e706c1cc75c6125cc9e9d226abb60c05519694d": {
      "address": "0xF5f5522ec5f694C512Ccf7957d2F9b572e4c6d61",
      "txHash": "0x6e076b80b62c5842951b32432d8d012e6c875723f1329fb0cc6216ab444068e3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(StakeTogether)12942",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:37"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Router)10095",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:38"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Fees)7008",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:39"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Config)14332_storage",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:40"
          },
          {
            "label": "withdrawalsShares",
            "offset": 0,
            "slot": "563",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:123"
          },
          {
            "label": "totalWithdrawalsShares",
            "offset": 0,
            "slot": "564",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:124"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "565",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:125"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "566",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:264"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "567",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:265"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "568",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:266"
          },
          {
            "label": "totalLiquidityWithdrawn",
            "offset": 0,
            "slot": "569",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:267"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10095": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12942": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14332_storage": {
            "label": "struct ILiquidity.Config",
            "members": [
              {
                "label": "enableLiquidity",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "enableDeposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "withdrawalLiquidityLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "blocksInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0d60179776e76fcd112c04acd54eb049f6b84d6c219a399cc7b674a925fabd7d": {
      "address": "0x0FAac9B115955e55b77D7ecABd4954B8E1D86396",
      "txHash": "0xfdf24d8aa7912f9c5223a08db20e20cc8e89b964a62de54c43c70324a7f7994d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(StakeTogether)12942",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:37"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Router)10095",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:38"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Fees)7008",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:39"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Config)14332_storage",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:40"
          },
          {
            "label": "withdrawalsShares",
            "offset": 0,
            "slot": "563",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:123"
          },
          {
            "label": "totalWithdrawalsShares",
            "offset": 0,
            "slot": "564",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:124"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "565",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:125"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "566",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:264"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "567",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:265"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "568",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:266"
          },
          {
            "label": "totalLiquidityWithdrawn",
            "offset": 0,
            "slot": "569",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:267"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10095": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12942": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14332_storage": {
            "label": "struct ILiquidity.Config",
            "members": [
              {
                "label": "enableLiquidity",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "enableDeposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "withdrawalLiquidityLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "blocksInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "80ab1c4eec6c27da95204df4609d767bcaefb8f818432d7254bf347f6cdc386c": {
      "address": "0xD0EB6dDA84e2a96414603C89c2c54c4E5C479231",
      "txHash": "0x1fff11f5716a5a9a3141a59e2fd7b0ff5a4b24c29ac2d17950d76cfd23948f51",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12757",
            "contract": "Validators",
            "src": "contracts/Validators.sol:34"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)9892",
            "contract": "Validators",
            "src": "contracts/Validators.sol:35"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Fees)7008",
            "contract": "Validators",
            "src": "contracts/Validators.sol:36"
          },
          {
            "label": "depositContract",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(IDepositContract)13970",
            "contract": "Validators",
            "src": "contracts/Validators.sol:37"
          },
          {
            "label": "validatorOracles",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Validators",
            "src": "contracts/Validators.sol:105"
          },
          {
            "label": "currentOracleIndex",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "Validators",
            "src": "contracts/Validators.sol:106"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "Validators",
            "src": "contracts/Validators.sol:163"
          },
          {
            "label": "totalValidators",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "Validators",
            "src": "contracts/Validators.sol:164"
          },
          {
            "label": "validatorSize",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "Validators",
            "src": "contracts/Validators.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(IDepositContract)13970": {
            "label": "contract IDepositContract",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9892": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12757": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "cbca208d2d1492fad4467e8354599e167bfdf1067c4d07b7cb2ea2257eef4698": {
      "address": "0xBAAD985fF2b6c28A4f35AEF3b7AeA9F40Fb49C65",
      "txHash": "0x049896c481f9ef78cbf7b0c918ffae3745b3a149fc4ca5219b377d4923c3ab72",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(StakeTogether)12757",
            "contract": "Withdrawals",
            "src": "contracts/Withdrawals.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(StakeTogether)12757": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4edea6bf79dad385cf32d04215e009e6693e353ed28778b9fafa612edeb10a6b": {
      "address": "0x5e1f7648fe2bA946a28d455799A8C7f3A95f45Dc",
      "txHash": "0xa966f65971c36677896797cd08be35b45131141fb5c488cf401f91cf5ac7925e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12663",
            "contract": "Router",
            "src": "contracts/Router.sol:37"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Fees)7008",
            "contract": "Router",
            "src": "contracts/Router.sol:38"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Withdrawals)13745",
            "contract": "Router",
            "src": "contracts/Router.sol:39"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(Liquidity)8331",
            "contract": "Router",
            "src": "contracts/Router.sol:40"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(Airdrop)5956",
            "contract": "Router",
            "src": "contracts/Router.sol:41"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(Validators)13369",
            "contract": "Router",
            "src": "contracts/Router.sol:42"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "357",
            "type": "t_struct(Config)14068_storage",
            "contract": "Router",
            "src": "contracts/Router.sol:43"
          },
          {
            "label": "totalReportOracles",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:127"
          },
          {
            "label": "reportOracles",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:128"
          },
          {
            "label": "reportOraclesBlacklist",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:129"
          },
          {
            "label": "oracleReports",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "Router",
            "src": "contracts/Router.sol:221"
          },
          {
            "label": "oracleReportsVotes",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "Router",
            "src": "contracts/Router.sol:222"
          },
          {
            "label": "executedReports",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "Router",
            "src": "contracts/Router.sol:223"
          },
          {
            "label": "reportHistoric",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "contract": "Router",
            "src": "contracts/Router.sol:224"
          },
          {
            "label": "consensusReport",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Router",
            "src": "contracts/Router.sol:225"
          },
          {
            "label": "consensusInvalidatedReport",
            "offset": 0,
            "slot": "372",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:226"
          },
          {
            "label": "reportBlockNumber",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:228"
          },
          {
            "label": "lastConsensusEpoch",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:229"
          },
          {
            "label": "lastExecutedConsensusEpoch",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:230"
          },
          {
            "label": "reportExecutionBlock",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:232"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5956": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8331": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12663": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13369": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13745": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14068_storage": {
            "label": "struct IRouter.Config",
            "members": [
              {
                "label": "bunkerMode",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxValidatorsToExit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minBlocksBeforeExecution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minReportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "oracleBlackListLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "reportBlockFrequency",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8c1c89613cda3bda4c859d93ade93beb925c787bf1940ff65d694fe3c3e30f10": {
      "address": "0xAD4A1C06D8e5C100030eb26373d86FD0305F823c",
      "txHash": "0x9b00fb977ea6d466607bf8dadb2b59efeb7d06fe5936acf5e025955f64d58f60",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12663",
            "contract": "Router",
            "src": "contracts/Router.sol:37"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Fees)7008",
            "contract": "Router",
            "src": "contracts/Router.sol:38"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Withdrawals)13745",
            "contract": "Router",
            "src": "contracts/Router.sol:39"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(Liquidity)8331",
            "contract": "Router",
            "src": "contracts/Router.sol:40"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(Airdrop)5956",
            "contract": "Router",
            "src": "contracts/Router.sol:41"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(Validators)13369",
            "contract": "Router",
            "src": "contracts/Router.sol:42"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "357",
            "type": "t_struct(Config)14068_storage",
            "contract": "Router",
            "src": "contracts/Router.sol:43"
          },
          {
            "label": "totalReportOracles",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:127"
          },
          {
            "label": "reportOracles",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:128"
          },
          {
            "label": "reportOraclesBlacklist",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:129"
          },
          {
            "label": "oracleReports",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "Router",
            "src": "contracts/Router.sol:221"
          },
          {
            "label": "oracleReportsVotes",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "Router",
            "src": "contracts/Router.sol:222"
          },
          {
            "label": "executedReports",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "Router",
            "src": "contracts/Router.sol:223"
          },
          {
            "label": "reportHistoric",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "contract": "Router",
            "src": "contracts/Router.sol:224"
          },
          {
            "label": "consensusReport",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Router",
            "src": "contracts/Router.sol:225"
          },
          {
            "label": "consensusInvalidatedReport",
            "offset": 0,
            "slot": "372",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:226"
          },
          {
            "label": "reportBlockNumber",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:228"
          },
          {
            "label": "lastConsensusEpoch",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:229"
          },
          {
            "label": "lastExecutedConsensusEpoch",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:230"
          },
          {
            "label": "reportExecutionBlock",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:232"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5956": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8331": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12663": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13369": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13745": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14068_storage": {
            "label": "struct IRouter.Config",
            "members": [
              {
                "label": "bunkerMode",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxValidatorsToExit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minBlocksBeforeExecution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minReportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "oracleBlackListLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "reportBlockFrequency",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c126a8d4162cbdedfe088ad67c0d1d8973ee58b648b6a919a8a19d87205de9c8": {
      "address": "0xF88fdFf5Dc4CcABf85Ff5844C1F4247148f7F325",
      "txHash": "0x2965c643cdba1ff6ad275fc8074f90085be85237d3a9dc88bce4d23b11ee2245",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12480",
            "contract": "Fees",
            "src": "contracts/Fees.sol:30"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Liquidity)8277",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:33"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_enum(FeeRoles)13703,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:35"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeType)13691,t_struct(Fee)13714_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12480": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)13694": {
            "label": "enum IFees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)13703": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)13691": {
            "label": "enum IFees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)13703,t_address_payable)": {
            "label": "mapping(enum IFees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)13703,t_uint256)": {
            "label": "mapping(enum IFees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)13691,t_struct(Fee)13714_storage)": {
            "label": "mapping(enum IFees.FeeType => struct IFees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)13714_storage": {
            "label": "struct IFees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)13694",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)13703,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ce206fcd78ac0441edd5da882c6cf0a38fc953ab17ce98af1f11605551f2db8e": {
      "address": "0x9102aCD0C8b56032E52cE616eb8BaaEce958e5Ad",
      "txHash": "0x3b5de4fe8ec9c6c7c897a7773a5e7b799979b9c0404ae656cf3a950f2ddfea37",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12480",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:29"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)9758",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:30"
          },
          {
            "label": "airdropsMerkleRoots",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_enum(FeeRoles)13703,t_mapping(t_uint256,t_bytes32))",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:91"
          },
          {
            "label": "claimedBitMap",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_enum(FeeRoles)13703,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:92"
          },
          {
            "label": "maxBatchSize",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12480": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeRoles)13703": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)13703,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(enum IFees.FeeRoles => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)13703,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(enum IFees.FeeRoles => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "667dd31354270dcba67876b1a166bbc0f4f6673f4cd2679131244c27674f7f96": {
      "address": "0xF21e9fCaB520727cb84a9fB392979Ff34765B37b",
      "txHash": "0x5e38e2aa4ad15126468c41805ea033b8de220722d5faef5af2fb88092fda2b36",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(StakeTogether)12480",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:37"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Router)9758",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:38"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Fees)6996",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:39"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Config)13784_storage",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:40"
          },
          {
            "label": "withdrawalsSharesOf",
            "offset": 0,
            "slot": "563",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:122"
          },
          {
            "label": "totalWithdrawalsShares",
            "offset": 0,
            "slot": "564",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:123"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "565",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:124"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "566",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:248"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "567",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:249"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "568",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:250"
          },
          {
            "label": "totalLiquidityWithdrawn",
            "offset": 0,
            "slot": "569",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:251"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12480": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)13784_storage": {
            "label": "struct ILiquidity.Config",
            "members": [
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawalLiquidityLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "blocksInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)13791_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)13791_storage": {
            "label": "struct ILiquidity.Feature",
            "members": [
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Withdraw",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Liquidity",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "578a96688a56452417e84568e36327083712da98b2ea8360fd74a4222bbc80aa": {
      "address": "0xbe57682181B8e66d03d3d5906252f474e2B3ac59",
      "txHash": "0xfd0a361af00b764b68d27d23a8878cd3f3dff4bc0e2133192e46821156bef22f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12480",
            "contract": "Validators",
            "src": "contracts/Validators.sol:34"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)9758",
            "contract": "Validators",
            "src": "contracts/Validators.sol:35"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Fees)6996",
            "contract": "Validators",
            "src": "contracts/Validators.sol:36"
          },
          {
            "label": "depositContract",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(IDepositContract)13681",
            "contract": "Validators",
            "src": "contracts/Validators.sol:37"
          },
          {
            "label": "validatorOracles",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Validators",
            "src": "contracts/Validators.sol:104"
          },
          {
            "label": "currentOracleIndex",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "Validators",
            "src": "contracts/Validators.sol:105"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "Validators",
            "src": "contracts/Validators.sol:162"
          },
          {
            "label": "totalValidators",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "Validators",
            "src": "contracts/Validators.sol:163"
          },
          {
            "label": "validatorSize",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "Validators",
            "src": "contracts/Validators.sol:164"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(IDepositContract)13681": {
            "label": "contract IDepositContract",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12480": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "e0936e02ddfa10dc5e8a70798681efafbd24de102c02bda8c0ce242e300429d1": {
      "address": "0xE661FA2334c902b25C11CF82AaF56e3c489B57E4",
      "txHash": "0x1ab36a4e34785bc0eadb2ba35fb456396b184898396ba72404fd01b59bd20808",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(StakeTogether)12480",
            "contract": "Withdrawals",
            "src": "contracts/Withdrawals.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(StakeTogether)12480": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ce26fa0e920efabda8a979222876eb5507d622af9c7273bd3a0e46a0294ad177": {
      "address": "0xf84B3635823Ba34B6dB0E5f6853926F03c6346be",
      "txHash": "0x02d3795e8dce1fff31ff3bed22363f926efba5baf9ed0e53155799f846c1de16",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12480",
            "contract": "Router",
            "src": "contracts/Router.sol:37"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Fees)6996",
            "contract": "Router",
            "src": "contracts/Router.sol:38"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Withdrawals)13550",
            "contract": "Router",
            "src": "contracts/Router.sol:39"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(Liquidity)8277",
            "contract": "Router",
            "src": "contracts/Router.sol:40"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(Airdrop)5950",
            "contract": "Router",
            "src": "contracts/Router.sol:41"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(Validators)13180",
            "contract": "Router",
            "src": "contracts/Router.sol:42"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "357",
            "type": "t_struct(Config)13879_storage",
            "contract": "Router",
            "src": "contracts/Router.sol:43"
          },
          {
            "label": "totalReportOracles",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:126"
          },
          {
            "label": "reportOracles",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:127"
          },
          {
            "label": "reportOraclesBlacklist",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:128"
          },
          {
            "label": "oracleReports",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "Router",
            "src": "contracts/Router.sol:220"
          },
          {
            "label": "oracleReportsVotes",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "Router",
            "src": "contracts/Router.sol:221"
          },
          {
            "label": "executedReports",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "Router",
            "src": "contracts/Router.sol:222"
          },
          {
            "label": "reportHistoric",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "contract": "Router",
            "src": "contracts/Router.sol:223"
          },
          {
            "label": "consensusReport",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Router",
            "src": "contracts/Router.sol:224"
          },
          {
            "label": "consensusInvalidatedReport",
            "offset": 0,
            "slot": "372",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:225"
          },
          {
            "label": "reportBlockNumber",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:227"
          },
          {
            "label": "lastConsensusEpoch",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:228"
          },
          {
            "label": "lastExecutedConsensusEpoch",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:229"
          },
          {
            "label": "reportExecutionBlock",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:231"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12480": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13180": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13550": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(Config)13879_storage": {
            "label": "struct IRouter.Config",
            "members": [
              {
                "label": "bunkerMode",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxValidatorsToExit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minBlocksBeforeExecution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minReportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "oracleBlackListLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "reportBlockFrequency",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "08997ddb17d07f8e16041c555f1e6c8d40aa1dba9b9ac8c869a9655fe23eb88a": {
      "address": "0x1e2D03474Ab840a54A90FCd7645963Cec94a4e87",
      "txHash": "0x434cc16df33843fec16eeb4fa41da22c8244dd81d6054d39b3aac32d37865e43",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(Router)9758",
            "contract": "Shares",
            "src": "contracts/Shares.sol:41"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Fees)6996",
            "contract": "Shares",
            "src": "contracts/Shares.sol:42"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Airdrop)5950",
            "contract": "Shares",
            "src": "contracts/Shares.sol:43"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "557",
            "type": "t_contract(Withdrawals)13550",
            "contract": "Shares",
            "src": "contracts/Shares.sol:44"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "558",
            "type": "t_contract(Liquidity)8277",
            "contract": "Shares",
            "src": "contracts/Shares.sol:45"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "559",
            "type": "t_contract(Validators)13180",
            "contract": "Shares",
            "src": "contracts/Shares.sol:46"
          },
          {
            "label": "withdrawalCredentials",
            "offset": 0,
            "slot": "560",
            "type": "t_bytes_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:48"
          },
          {
            "label": "beaconBalance",
            "offset": 0,
            "slot": "561",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:49"
          },
          {
            "label": "liquidityBalance",
            "offset": 0,
            "slot": "562",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:50"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "563",
            "type": "t_struct(Config)14070_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:51"
          },
          {
            "label": "sharesOf",
            "offset": 0,
            "slot": "572",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:69"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "573",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:70"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "574",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:71"
          },
          {
            "label": "totalLockedShares",
            "offset": 0,
            "slot": "575",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:186"
          },
          {
            "label": "lockedShares",
            "offset": 0,
            "slot": "576",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14092_storage))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:187"
          },
          {
            "label": "lockedSharesOf",
            "offset": 0,
            "slot": "577",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:188"
          },
          {
            "label": "lockSharesId",
            "offset": 0,
            "slot": "578",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:189"
          },
          {
            "label": "poolSharesOf",
            "offset": 0,
            "slot": "579",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:234"
          },
          {
            "label": "totalPoolShares",
            "offset": 0,
            "slot": "580",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:235"
          },
          {
            "label": "delegationsShares",
            "offset": 0,
            "slot": "581",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:236"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "582",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:237"
          },
          {
            "label": "isDelegate",
            "offset": 0,
            "slot": "583",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:238"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "584",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:393"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "585",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:107"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "586",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:108"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "587",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13180": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13550": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14092_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IStakeTogether.LockedShares))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedShares)14092_storage)": {
            "label": "mapping(uint256 => struct IStakeTogether.LockedShares)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14070_storage": {
            "label": "struct IStakeTogether.Config",
            "members": [
              {
                "label": "poolSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blocksPerDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "maxDelegations",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)14083_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)14083_storage": {
            "label": "struct IStakeTogether.Feature",
            "members": [
              {
                "label": "AddPool",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Lock",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "WithdrawPool",
                "type": "t_bool",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "WithdrawLiquidity",
                "type": "t_bool",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "WithdrawValidator",
                "type": "t_bool",
                "offset": 5,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedShares)14092_storage": {
            "label": "struct IStakeTogether.LockedShares",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8305a73c1a3182f9bf2ca4b9f254bd8030a6baf880bebf3e01a073b22f55083d": {
      "address": "0x746E133e75E55e8F76c9A27bAf789dE6106DdB54",
      "txHash": "0xf78cc1c89bc4aee86cbbec8da264c829b87e012fbec7b7e1f33522c678d34148",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(Router)9758",
            "contract": "Shares",
            "src": "contracts/Shares.sol:41"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Fees)6996",
            "contract": "Shares",
            "src": "contracts/Shares.sol:42"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Airdrop)5950",
            "contract": "Shares",
            "src": "contracts/Shares.sol:43"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "557",
            "type": "t_contract(Withdrawals)13554",
            "contract": "Shares",
            "src": "contracts/Shares.sol:44"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "558",
            "type": "t_contract(Liquidity)8277",
            "contract": "Shares",
            "src": "contracts/Shares.sol:45"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "559",
            "type": "t_contract(Validators)13184",
            "contract": "Shares",
            "src": "contracts/Shares.sol:46"
          },
          {
            "label": "withdrawalCredentials",
            "offset": 0,
            "slot": "560",
            "type": "t_bytes_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:48"
          },
          {
            "label": "beaconBalance",
            "offset": 0,
            "slot": "561",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:49"
          },
          {
            "label": "liquidityBalance",
            "offset": 0,
            "slot": "562",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:50"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "563",
            "type": "t_struct(Config)14074_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:51"
          },
          {
            "label": "sharesOf",
            "offset": 0,
            "slot": "572",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:69"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "573",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:70"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "574",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:71"
          },
          {
            "label": "totalLockedShares",
            "offset": 0,
            "slot": "575",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:186"
          },
          {
            "label": "lockedShares",
            "offset": 0,
            "slot": "576",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14096_storage))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:187"
          },
          {
            "label": "lockedSharesOf",
            "offset": 0,
            "slot": "577",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:188"
          },
          {
            "label": "lockSharesId",
            "offset": 0,
            "slot": "578",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:189"
          },
          {
            "label": "poolSharesOf",
            "offset": 0,
            "slot": "579",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:234"
          },
          {
            "label": "totalPoolShares",
            "offset": 0,
            "slot": "580",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:235"
          },
          {
            "label": "delegationsShares",
            "offset": 0,
            "slot": "581",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:236"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "582",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:237"
          },
          {
            "label": "isDelegate",
            "offset": 0,
            "slot": "583",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:238"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "584",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:393"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "585",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:107"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "586",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:108"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "587",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13184": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13554": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14096_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IStakeTogether.LockedShares))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedShares)14096_storage)": {
            "label": "mapping(uint256 => struct IStakeTogether.LockedShares)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14074_storage": {
            "label": "struct IStakeTogether.Config",
            "members": [
              {
                "label": "poolSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blocksPerDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "maxDelegations",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)14087_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)14087_storage": {
            "label": "struct IStakeTogether.Feature",
            "members": [
              {
                "label": "AddPool",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Lock",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "WithdrawPool",
                "type": "t_bool",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "WithdrawLiquidity",
                "type": "t_bool",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "WithdrawValidator",
                "type": "t_bool",
                "offset": 5,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedShares)14096_storage": {
            "label": "struct IStakeTogether.LockedShares",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2ce29c9996fe22fbc52194bac8f76c00801f15ab5ba100daa40ad2ed0bbbbd52": {
      "address": "0xfea6EEE4faa88140a81Ced8E879C01dA61C51c5c",
      "txHash": "0x5efd73bdbca7c5608032c9efcad4a3607cc67add55ef08f0b8a37d28a212a3d9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(Router)9758",
            "contract": "Shares",
            "src": "contracts/Shares.sol:41"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Fees)6996",
            "contract": "Shares",
            "src": "contracts/Shares.sol:42"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Airdrop)5950",
            "contract": "Shares",
            "src": "contracts/Shares.sol:43"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "557",
            "type": "t_contract(Withdrawals)13550",
            "contract": "Shares",
            "src": "contracts/Shares.sol:44"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "558",
            "type": "t_contract(Liquidity)8277",
            "contract": "Shares",
            "src": "contracts/Shares.sol:45"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "559",
            "type": "t_contract(Validators)13180",
            "contract": "Shares",
            "src": "contracts/Shares.sol:46"
          },
          {
            "label": "withdrawalCredentials",
            "offset": 0,
            "slot": "560",
            "type": "t_bytes_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:48"
          },
          {
            "label": "beaconBalance",
            "offset": 0,
            "slot": "561",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:49"
          },
          {
            "label": "liquidityBalance",
            "offset": 0,
            "slot": "562",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:50"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "563",
            "type": "t_struct(Config)14070_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:51"
          },
          {
            "label": "sharesOf",
            "offset": 0,
            "slot": "572",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:69"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "573",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:70"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "574",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:71"
          },
          {
            "label": "totalLockedShares",
            "offset": 0,
            "slot": "575",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:186"
          },
          {
            "label": "lockedShares",
            "offset": 0,
            "slot": "576",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14092_storage))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:187"
          },
          {
            "label": "lockedSharesOf",
            "offset": 0,
            "slot": "577",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:188"
          },
          {
            "label": "lockSharesId",
            "offset": 0,
            "slot": "578",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:189"
          },
          {
            "label": "poolSharesOf",
            "offset": 0,
            "slot": "579",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:234"
          },
          {
            "label": "totalPoolShares",
            "offset": 0,
            "slot": "580",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:235"
          },
          {
            "label": "delegationsShares",
            "offset": 0,
            "slot": "581",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:236"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "582",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:237"
          },
          {
            "label": "isDelegate",
            "offset": 0,
            "slot": "583",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:238"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "584",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:393"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "585",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:107"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "586",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:108"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "587",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13180": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13550": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14092_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IStakeTogether.LockedShares))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedShares)14092_storage)": {
            "label": "mapping(uint256 => struct IStakeTogether.LockedShares)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14070_storage": {
            "label": "struct IStakeTogether.Config",
            "members": [
              {
                "label": "poolSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blocksPerDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "maxDelegations",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)14083_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)14083_storage": {
            "label": "struct IStakeTogether.Feature",
            "members": [
              {
                "label": "AddPool",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Lock",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "WithdrawPool",
                "type": "t_bool",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "WithdrawLiquidity",
                "type": "t_bool",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "WithdrawValidator",
                "type": "t_bool",
                "offset": 5,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedShares)14092_storage": {
            "label": "struct IStakeTogether.LockedShares",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2b9024751ef1529880e45720e8c8d01e202c11a12dd663b7bf98c061379215d5": {
      "address": "0x41761C07E2eAcd0b38C7bD05545c94CC396d17E8",
      "txHash": "0x6dc88e6148a1e718c414d49640665b8a34bef26f78ed5bab4ffe5df95df63321",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(Router)9758",
            "contract": "Shares",
            "src": "contracts/Shares.sol:41"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Fees)6996",
            "contract": "Shares",
            "src": "contracts/Shares.sol:42"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Airdrop)5950",
            "contract": "Shares",
            "src": "contracts/Shares.sol:43"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "557",
            "type": "t_contract(Withdrawals)13530",
            "contract": "Shares",
            "src": "contracts/Shares.sol:44"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "558",
            "type": "t_contract(Liquidity)8277",
            "contract": "Shares",
            "src": "contracts/Shares.sol:45"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "559",
            "type": "t_contract(Validators)13160",
            "contract": "Shares",
            "src": "contracts/Shares.sol:46"
          },
          {
            "label": "withdrawalCredentials",
            "offset": 0,
            "slot": "560",
            "type": "t_bytes_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:48"
          },
          {
            "label": "beaconBalance",
            "offset": 0,
            "slot": "561",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:49"
          },
          {
            "label": "liquidityBalance",
            "offset": 0,
            "slot": "562",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:50"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "563",
            "type": "t_struct(Config)14050_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:51"
          },
          {
            "label": "sharesOf",
            "offset": 0,
            "slot": "572",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:69"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "573",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:70"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "574",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:71"
          },
          {
            "label": "totalLockedShares",
            "offset": 0,
            "slot": "575",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:186"
          },
          {
            "label": "lockedShares",
            "offset": 0,
            "slot": "576",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14072_storage))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:187"
          },
          {
            "label": "lockedSharesOf",
            "offset": 0,
            "slot": "577",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:188"
          },
          {
            "label": "lockSharesId",
            "offset": 0,
            "slot": "578",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:189"
          },
          {
            "label": "poolSharesOf",
            "offset": 0,
            "slot": "579",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:234"
          },
          {
            "label": "totalPoolShares",
            "offset": 0,
            "slot": "580",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:235"
          },
          {
            "label": "delegationsShares",
            "offset": 0,
            "slot": "581",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:236"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "582",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:237"
          },
          {
            "label": "isDelegate",
            "offset": 0,
            "slot": "583",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:238"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "584",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:393"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "585",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:107"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "586",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:108"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "587",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13160": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13530": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14072_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IStakeTogether.LockedShares))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedShares)14072_storage)": {
            "label": "mapping(uint256 => struct IStakeTogether.LockedShares)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14050_storage": {
            "label": "struct IStakeTogether.Config",
            "members": [
              {
                "label": "poolSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blocksPerDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "maxDelegations",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)14063_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)14063_storage": {
            "label": "struct IStakeTogether.Feature",
            "members": [
              {
                "label": "AddPool",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Lock",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "WithdrawPool",
                "type": "t_bool",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "WithdrawLiquidity",
                "type": "t_bool",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "WithdrawValidator",
                "type": "t_bool",
                "offset": 5,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedShares)14072_storage": {
            "label": "struct IStakeTogether.LockedShares",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c47324e64156788cb8fcc7857058828f7cad8af023758540a8e5e1cd5bfc1d86": {
      "address": "0x6F21bF28F98bEAC0ea9219E2A2Df66717736675A",
      "txHash": "0x070138b0935f7f7fdf5fcb485825b95af96873957726130761190ee94a361ab3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(Router)9758",
            "contract": "Shares",
            "src": "contracts/Shares.sol:41"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Fees)6996",
            "contract": "Shares",
            "src": "contracts/Shares.sol:42"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Airdrop)5950",
            "contract": "Shares",
            "src": "contracts/Shares.sol:43"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "557",
            "type": "t_contract(Withdrawals)13541",
            "contract": "Shares",
            "src": "contracts/Shares.sol:44"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "558",
            "type": "t_contract(Liquidity)8277",
            "contract": "Shares",
            "src": "contracts/Shares.sol:45"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "559",
            "type": "t_contract(Validators)13171",
            "contract": "Shares",
            "src": "contracts/Shares.sol:46"
          },
          {
            "label": "withdrawalCredentials",
            "offset": 0,
            "slot": "560",
            "type": "t_bytes_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:48"
          },
          {
            "label": "beaconBalance",
            "offset": 0,
            "slot": "561",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:49"
          },
          {
            "label": "liquidityBalance",
            "offset": 0,
            "slot": "562",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:50"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "563",
            "type": "t_struct(Config)14061_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:51"
          },
          {
            "label": "sharesOf",
            "offset": 0,
            "slot": "572",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:69"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "573",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:70"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "574",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:71"
          },
          {
            "label": "totalLockedShares",
            "offset": 0,
            "slot": "575",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:186"
          },
          {
            "label": "lockedShares",
            "offset": 0,
            "slot": "576",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14083_storage))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:187"
          },
          {
            "label": "lockedSharesOf",
            "offset": 0,
            "slot": "577",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:188"
          },
          {
            "label": "lockSharesId",
            "offset": 0,
            "slot": "578",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:189"
          },
          {
            "label": "poolSharesOf",
            "offset": 0,
            "slot": "579",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:234"
          },
          {
            "label": "totalPoolShares",
            "offset": 0,
            "slot": "580",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:235"
          },
          {
            "label": "delegationsShares",
            "offset": 0,
            "slot": "581",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:236"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "582",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:237"
          },
          {
            "label": "isDelegate",
            "offset": 0,
            "slot": "583",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:238"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "584",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:393"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "585",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:107"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "586",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:108"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "587",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13171": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13541": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14083_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IStakeTogether.LockedShares))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedShares)14083_storage)": {
            "label": "mapping(uint256 => struct IStakeTogether.LockedShares)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14061_storage": {
            "label": "struct IStakeTogether.Config",
            "members": [
              {
                "label": "poolSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blocksPerDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "maxDelegations",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)14074_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)14074_storage": {
            "label": "struct IStakeTogether.Feature",
            "members": [
              {
                "label": "AddPool",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Lock",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "WithdrawPool",
                "type": "t_bool",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "WithdrawLiquidity",
                "type": "t_bool",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "WithdrawValidator",
                "type": "t_bool",
                "offset": 5,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedShares)14083_storage": {
            "label": "struct IStakeTogether.LockedShares",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "133521cf057796ab0c39c44d14a1bb147b42e60648e7543be0bc2a15dc9677b4": {
      "address": "0x27c3B4E90ca8cFb0a608460DBCd114727B590f69",
      "txHash": "0x15948169752a4dd433f1da0d7fe3d3fdf25f78465933e3d5748e625dc7d00551",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(Router)9758",
            "contract": "Shares",
            "src": "contracts/Shares.sol:41"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Fees)6996",
            "contract": "Shares",
            "src": "contracts/Shares.sol:42"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Airdrop)5950",
            "contract": "Shares",
            "src": "contracts/Shares.sol:43"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "557",
            "type": "t_contract(Withdrawals)13552",
            "contract": "Shares",
            "src": "contracts/Shares.sol:44"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "558",
            "type": "t_contract(Liquidity)8277",
            "contract": "Shares",
            "src": "contracts/Shares.sol:45"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "559",
            "type": "t_contract(Validators)13182",
            "contract": "Shares",
            "src": "contracts/Shares.sol:46"
          },
          {
            "label": "withdrawalCredentials",
            "offset": 0,
            "slot": "560",
            "type": "t_bytes_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:48"
          },
          {
            "label": "beaconBalance",
            "offset": 0,
            "slot": "561",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:49"
          },
          {
            "label": "liquidityBalance",
            "offset": 0,
            "slot": "562",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:50"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "563",
            "type": "t_struct(Config)14072_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:51"
          },
          {
            "label": "sharesOf",
            "offset": 0,
            "slot": "572",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:69"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "573",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:70"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "574",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:71"
          },
          {
            "label": "totalLockedShares",
            "offset": 0,
            "slot": "575",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:186"
          },
          {
            "label": "lockedShares",
            "offset": 0,
            "slot": "576",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14094_storage))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:187"
          },
          {
            "label": "lockedSharesOf",
            "offset": 0,
            "slot": "577",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:188"
          },
          {
            "label": "lockSharesId",
            "offset": 0,
            "slot": "578",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:189"
          },
          {
            "label": "poolSharesOf",
            "offset": 0,
            "slot": "579",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:234"
          },
          {
            "label": "totalPoolShares",
            "offset": 0,
            "slot": "580",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:235"
          },
          {
            "label": "delegationsShares",
            "offset": 0,
            "slot": "581",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:236"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "582",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:237"
          },
          {
            "label": "isDelegate",
            "offset": 0,
            "slot": "583",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:238"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "584",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:393"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "585",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:108"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "586",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:109"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "587",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13182": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13552": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14094_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IStakeTogether.LockedShares))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedShares)14094_storage)": {
            "label": "mapping(uint256 => struct IStakeTogether.LockedShares)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14072_storage": {
            "label": "struct IStakeTogether.Config",
            "members": [
              {
                "label": "poolSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blocksPerDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "maxDelegations",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)14085_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)14085_storage": {
            "label": "struct IStakeTogether.Feature",
            "members": [
              {
                "label": "AddPool",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Lock",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "WithdrawPool",
                "type": "t_bool",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "WithdrawLiquidity",
                "type": "t_bool",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "WithdrawValidator",
                "type": "t_bool",
                "offset": 5,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedShares)14094_storage": {
            "label": "struct IStakeTogether.LockedShares",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ccc1b3ddb2e94adce23a7ac938f5d232b9479beefc1f554295d0e76aa8d97af0": {
      "address": "0x8F6237eCdc17B908F32811Bae5017f4C7Aa1e55B",
      "txHash": "0x7ab1faffcb187f16aaf1e6b8a19297537940a0a62d4667f86e062fe82b968357",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12482",
            "contract": "Router",
            "src": "contracts/Router.sol:37"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Fees)6996",
            "contract": "Router",
            "src": "contracts/Router.sol:38"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Withdrawals)13552",
            "contract": "Router",
            "src": "contracts/Router.sol:39"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(Liquidity)8277",
            "contract": "Router",
            "src": "contracts/Router.sol:40"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(Airdrop)5950",
            "contract": "Router",
            "src": "contracts/Router.sol:41"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(Validators)13182",
            "contract": "Router",
            "src": "contracts/Router.sol:42"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "357",
            "type": "t_struct(Config)13881_storage",
            "contract": "Router",
            "src": "contracts/Router.sol:43"
          },
          {
            "label": "totalReportOracles",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:126"
          },
          {
            "label": "reportOracles",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:127"
          },
          {
            "label": "reportOraclesBlacklist",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:128"
          },
          {
            "label": "oracleReports",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "Router",
            "src": "contracts/Router.sol:220"
          },
          {
            "label": "oracleReportsVotes",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "Router",
            "src": "contracts/Router.sol:221"
          },
          {
            "label": "executedReports",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "Router",
            "src": "contracts/Router.sol:222"
          },
          {
            "label": "reportHistoric",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "contract": "Router",
            "src": "contracts/Router.sol:223"
          },
          {
            "label": "consensusReport",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Router",
            "src": "contracts/Router.sol:224"
          },
          {
            "label": "consensusInvalidatedReport",
            "offset": 0,
            "slot": "372",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:225"
          },
          {
            "label": "reportBlockNumber",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:227"
          },
          {
            "label": "lastConsensusEpoch",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:228"
          },
          {
            "label": "lastExecutedConsensusEpoch",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:229"
          },
          {
            "label": "reportExecutionBlock",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:231"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12482": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13182": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13552": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(Config)13881_storage": {
            "label": "struct IRouter.Config",
            "members": [
              {
                "label": "bunkerMode",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxValidatorsToExit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minBlocksBeforeExecution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minReportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "oracleBlackListLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "reportBlockFrequency",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "14d90422d278a9887b97813973e18e8d0a30349cadcd59286aab0f8587b2929f": {
      "address": "0xa6F9d0BD3d735e00ef44Ab44AAd1544C70B9B109",
      "txHash": "0x8c2b25d749108e9d9e89a6f0b2c45c4e031b88db98f155b96ec662dd8722bc3b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(Router)9758",
            "contract": "Shares",
            "src": "contracts/Shares.sol:41"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Fees)6996",
            "contract": "Shares",
            "src": "contracts/Shares.sol:42"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Airdrop)5950",
            "contract": "Shares",
            "src": "contracts/Shares.sol:43"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "557",
            "type": "t_contract(Withdrawals)13552",
            "contract": "Shares",
            "src": "contracts/Shares.sol:44"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "558",
            "type": "t_contract(Liquidity)8277",
            "contract": "Shares",
            "src": "contracts/Shares.sol:45"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "559",
            "type": "t_contract(Validators)13182",
            "contract": "Shares",
            "src": "contracts/Shares.sol:46"
          },
          {
            "label": "withdrawalCredentials",
            "offset": 0,
            "slot": "560",
            "type": "t_bytes_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:48"
          },
          {
            "label": "beaconBalance",
            "offset": 0,
            "slot": "561",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:49"
          },
          {
            "label": "liquidityBalance",
            "offset": 0,
            "slot": "562",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:50"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "563",
            "type": "t_struct(Config)14072_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:51"
          },
          {
            "label": "sharesOf",
            "offset": 0,
            "slot": "572",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:69"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "573",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:70"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "574",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:71"
          },
          {
            "label": "totalLockedShares",
            "offset": 0,
            "slot": "575",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:186"
          },
          {
            "label": "lockedShares",
            "offset": 0,
            "slot": "576",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14094_storage))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:187"
          },
          {
            "label": "lockedSharesOf",
            "offset": 0,
            "slot": "577",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:188"
          },
          {
            "label": "lockSharesId",
            "offset": 0,
            "slot": "578",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:189"
          },
          {
            "label": "poolSharesOf",
            "offset": 0,
            "slot": "579",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:234"
          },
          {
            "label": "totalPoolShares",
            "offset": 0,
            "slot": "580",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:235"
          },
          {
            "label": "delegationsShares",
            "offset": 0,
            "slot": "581",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:236"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "582",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:237"
          },
          {
            "label": "isDelegate",
            "offset": 0,
            "slot": "583",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:238"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "584",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:393"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "585",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:108"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "586",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:109"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "587",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13182": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13552": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14094_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IStakeTogether.LockedShares))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedShares)14094_storage)": {
            "label": "mapping(uint256 => struct IStakeTogether.LockedShares)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14072_storage": {
            "label": "struct IStakeTogether.Config",
            "members": [
              {
                "label": "poolSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blocksPerDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "maxDelegations",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)14085_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)14085_storage": {
            "label": "struct IStakeTogether.Feature",
            "members": [
              {
                "label": "AddPool",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Lock",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "WithdrawPool",
                "type": "t_bool",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "WithdrawLiquidity",
                "type": "t_bool",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "WithdrawValidator",
                "type": "t_bool",
                "offset": 5,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedShares)14094_storage": {
            "label": "struct IStakeTogether.LockedShares",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "159d631d75193d5a4cac9c745d359b043b27c1dad69ba9ea6d844b3da05b23cc": {
      "address": "0xD84aAC5E44E53B3F589fc02E65F2CC6557837fEA",
      "txHash": "0xe9d02fba84bae0f6ef660e9b65d492f30d70dd334b8b070610c18fbb9f128770",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(Router)9758",
            "contract": "Shares",
            "src": "contracts/Shares.sol:41"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Fees)6996",
            "contract": "Shares",
            "src": "contracts/Shares.sol:42"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Airdrop)5950",
            "contract": "Shares",
            "src": "contracts/Shares.sol:43"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "557",
            "type": "t_contract(Withdrawals)13559",
            "contract": "Shares",
            "src": "contracts/Shares.sol:44"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "558",
            "type": "t_contract(Liquidity)8277",
            "contract": "Shares",
            "src": "contracts/Shares.sol:45"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "559",
            "type": "t_contract(Validators)13189",
            "contract": "Shares",
            "src": "contracts/Shares.sol:46"
          },
          {
            "label": "withdrawalCredentials",
            "offset": 0,
            "slot": "560",
            "type": "t_bytes_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:48"
          },
          {
            "label": "beaconBalance",
            "offset": 0,
            "slot": "561",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:49"
          },
          {
            "label": "liquidityBalance",
            "offset": 0,
            "slot": "562",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:50"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "563",
            "type": "t_struct(Config)14079_storage",
            "contract": "Shares",
            "src": "contracts/Shares.sol:51"
          },
          {
            "label": "sharesOf",
            "offset": 0,
            "slot": "572",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:69"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "573",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:70"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "574",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:71"
          },
          {
            "label": "totalLockedShares",
            "offset": 0,
            "slot": "575",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:186"
          },
          {
            "label": "lockedShares",
            "offset": 0,
            "slot": "576",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14101_storage))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:187"
          },
          {
            "label": "lockedSharesOf",
            "offset": 0,
            "slot": "577",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:188"
          },
          {
            "label": "lockSharesId",
            "offset": 0,
            "slot": "578",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:189"
          },
          {
            "label": "poolSharesOf",
            "offset": 0,
            "slot": "579",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:234"
          },
          {
            "label": "totalPoolShares",
            "offset": 0,
            "slot": "580",
            "type": "t_uint256",
            "contract": "Shares",
            "src": "contracts/Shares.sol:235"
          },
          {
            "label": "delegationsShares",
            "offset": 0,
            "slot": "581",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:236"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "582",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:237"
          },
          {
            "label": "isDelegate",
            "offset": 0,
            "slot": "583",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "Shares",
            "src": "contracts/Shares.sol:238"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "584",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Shares",
            "src": "contracts/Shares.sol:393"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "585",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:108"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "586",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:109"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "587",
            "type": "t_uint256",
            "contract": "StakeTogether",
            "src": "contracts/StakeTogether.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5950": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8277": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13189": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13559": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedShares)14101_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IStakeTogether.LockedShares))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedShares)14101_storage)": {
            "label": "mapping(uint256 => struct IStakeTogether.LockedShares)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14079_storage": {
            "label": "struct IStakeTogether.Config",
            "members": [
              {
                "label": "poolSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxLockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "blocksPerDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "maxDelegations",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)14092_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)14092_storage": {
            "label": "struct IStakeTogether.Feature",
            "members": [
              {
                "label": "AddPool",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Lock",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "WithdrawPool",
                "type": "t_bool",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "WithdrawLiquidity",
                "type": "t_bool",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "WithdrawValidator",
                "type": "t_bool",
                "offset": 5,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedShares)14101_storage": {
            "label": "struct IStakeTogether.LockedShares",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "unlockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockDays",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8477cc3d5fc66e115c9096d13dbdee6d78823028a49cf76cecb15a8ef818abe7": {
      "address": "0xE60A19BFd0041a3fe4192f12Fba10d2C1D49367C",
      "txHash": "0x4929f82d831aa59ce6b4bd7b6a4a9c5781c82d3db81da357cc122b39ba74dc7a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(StakeTogether)12476",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:37"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Router)9758",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:38"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Fees)6996",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:39"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Config)13780_storage",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:40"
          },
          {
            "label": "shares",
            "offset": 0,
            "slot": "563",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:122"
          },
          {
            "label": "totalShares",
            "offset": 0,
            "slot": "564",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:123"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "565",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:124"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "566",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:243"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "567",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:244"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "568",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:245"
          },
          {
            "label": "totalLiquidityWithdrawn",
            "offset": 0,
            "slot": "569",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:246"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Fees)6996": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9758": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12476": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)13780_storage": {
            "label": "struct ILiquidity.Config",
            "members": [
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawalLiquidityLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "blocksInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "feature",
                "type": "t_struct(Feature)13787_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Feature)13787_storage": {
            "label": "struct ILiquidity.Feature",
            "members": [
              {
                "label": "Deposit",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "Withdraw",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "Liquidity",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
