{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1373731F88cCbfc56D2854116dbb0e5588717e0f",
      "txHash": "0xf7730524ca4db0b404730c89d99328929ecf105611f03acc367180f2f4fe961e",
      "kind": "uups"
    },
    {
      "address": "0xad0afC855D860530DF89F170cD450a8CE8B9CbED",
      "txHash": "0x339dd68755780180ea67013d4aaeae4ceb2455ab8959389d5fbd66b303be095b",
      "kind": "uups"
    },
    {
      "address": "0x50Cc6B8704F78Fe7da909887F43796b7800fe120",
      "txHash": "0xee037d4d37cf39eb819c6c6a4b41726db0f6712bb7c182f30743b74d6d0362df",
      "kind": "uups"
    },
    {
      "address": "0x1936Db97984fAE1d507527BbEb69B258169Af9e5",
      "txHash": "0xa40c30c4ee1ec03bd4409750ec453317c5d25c5f93f05e48da130f0efd293e3a",
      "kind": "uups"
    },
    {
      "address": "0x111eD1dc7E461BEda994A3aE7c18864A43695B75",
      "txHash": "0xeeaab4ce3eabd6a93145acd8c02d237912a72baa9ab0496cc2fab0bab1042f74",
      "kind": "uups"
    },
    {
      "address": "0x2EA5a4Ca2fc1d78b3779dbe491f5e2E78b0466Db",
      "txHash": "0x469de567c3d4e1d04371635724213abf2f9caec8f858c4e2e3a4cee57769dced",
      "kind": "uups"
    },
    {
      "address": "0xCA707495070e58F46E90CCa6D3f484dB566C18Eb",
      "txHash": "0x2f50271ec1954b9e8071ec469ee34b31aa549d6fa2bb201559c9052d50f2119d",
      "kind": "uups"
    },
    {
      "address": "0x00995Eead0bed6eBB145fC46aDB26295153B7B05",
      "txHash": "0x696ff314445ea6ec9f4636b54382cb3751286b61a82794250bbe442322e99cab",
      "kind": "uups"
    },
    {
      "address": "0x2DCF4eb08Be14229E2b2c14903425fab36B2Cef0",
      "txHash": "0x8874df4b4b3151c5f8eaecf91fb398d9cab8eafa9988ffa7bbd5b63b666440dc",
      "kind": "uups"
    },
    {
      "address": "0xddA34414030fF898C893113e1AFf47efCF72E1bB",
      "txHash": "0x727688ab6c9db8842f0cdd12057553d3cedcc8d82bac91c5a76240e345170ca6",
      "kind": "uups"
    },
    {
      "address": "0xdBbCe2220B0D2cC5B8b8531aC387B307F410a265",
      "txHash": "0xc3a3b5438e5c66efe9aa8cb2114a236d9cce5968eeb71e7fb4522581eaa0046b",
      "kind": "uups"
    },
    {
      "address": "0x1ab6871D1765e10C7d9B56d7941587891C9687EA",
      "txHash": "0x39dc2a74516dbad750b75fad563531cce6bd60bbc36104e5d5f140fddae4d372",
      "kind": "uups"
    },
    {
      "address": "0xd3E5db6b4B0E253Af680Ad876512bf02f9d3Bb30",
      "txHash": "0x10f747d99a2982d51652f91153a21b968db3a398fda17fcadc215c621b446019",
      "kind": "uups"
    },
    {
      "address": "0x8B5509c5F672cc9cF5c975ab124d0aB0122435e8",
      "txHash": "0x23f7dccf687b9b166f74cc79a0772f8db82a39edb92b1907d190c4d740815280",
      "kind": "uups"
    },
    {
      "address": "0xA6D418F964BC1384bc984389C0355aD938bB43b2",
      "txHash": "0x8a34e81b89a06905d0da97ec8f16e63b96360f6e19ad0a39db948b29330233af",
      "kind": "uups"
    },
    {
      "address": "0x4d2Ff5a41aeC3C7BfD0d279B08Aae663EAc6A7c3",
      "txHash": "0xb54d13b95b2465eaa9960b6afb917e7e49fe8413d5b79f730b1ac0121e1dace7",
      "kind": "uups"
    },
    {
      "address": "0xd96F6027dE4DeE0b3ac54b11352A99dc90190d2f",
      "txHash": "0x5b700211de6d83ef8d00e292778da3a755c329b3639c3b41083ca19a59da8ba4",
      "kind": "uups"
    },
    {
      "address": "0xADBe1CaB6944D893aB435C654badbf8bAaa62952",
      "txHash": "0x5e6ff1be0655be2700c72fb1e00d5fd3645938a3dbcfd46d12073bddc5294d4f",
      "kind": "uups"
    },
    {
      "address": "0x0e98bAc59C289b35Fe57dbe665d2Ae938653Aa0a",
      "txHash": "0x167cb3a4ae4d2a8a5d780b972f213c75f06ab6121d271c1266d018c0484e5e27",
      "kind": "uups"
    },
    {
      "address": "0x3b32a80F43B4E3E0F3763aDdD0fE30A70a9e75d5",
      "txHash": "0xc869655b6463aaea395e8b14d0a1fac93245f2f6405189f1cd573fca38ca9465",
      "kind": "uups"
    },
    {
      "address": "0x5A917feC849651170Ef6Dc43fc9416299565CbBb",
      "txHash": "0xb6755ee97e31b6b9fb045fc11945ca4efecf037aac1bcd1da430acb5339aa1bb",
      "kind": "uups"
    },
    {
      "address": "0xAF130D6300cFe06247c7480169D946f8b5a3Fa92",
      "txHash": "0xf3c1fbbe164fe1bf089f0ffc948f90a40f5bcc727070f7e036d0967692e45611",
      "kind": "uups"
    },
    {
      "address": "0xF5fA5a42fFfF5bD778A1Bfd10e23394fc42084bb",
      "txHash": "0xd8fc051c1cf7f72bc48f12fec215a68f429ea450e2037a12da491b4c1bc39ecf",
      "kind": "uups"
    },
    {
      "address": "0xe2B3F377dE59d1AbAdEaDb87CD77e94F8C5fb995",
      "txHash": "0x31380c0aef956906d3ad62be2a1c1b58eba61c65e42b00f1ea461197b4f0e64d",
      "kind": "uups"
    },
    {
      "address": "0x732E96f537d186d543305F7CB8DaD5BF98065d6D",
      "txHash": "0xbaad82b505ad3989ec42f6bcb8092fb249ce2a7ed9e89e2e3aae8e197d6276c5",
      "kind": "uups"
    },
    {
      "address": "0xcadf8b228D989264665136618D1365c94C87EB1f",
      "txHash": "0x9129a461e3c8483be5693ee1675c78ead82eac832ef56528e043010ddeb2e951",
      "kind": "uups"
    },
    {
      "address": "0x21596151b3E67aE539CDafC5e5E1E6e9AA4ABF56",
      "txHash": "0x8a2984f8eadc0c3c7465a05f0fe593143792508113dfc6328b3902b0706c895c",
      "kind": "uups"
    },
    {
      "address": "0x57AE60C3a31a95185Bc41c24d63AEDE0D0ff037d",
      "txHash": "0xe99af996cf20b2970059b972b8df439c1c7d6224ae816e8f1ded4257cd1f706b",
      "kind": "uups"
    },
    {
      "address": "0x025f87b7B58C6D50e53e41c8077cEcE0395E0996",
      "txHash": "0x4403d6e1ebc631c54e28f1f17e14ec4e7e057702cdcc181171b94b83956f516d",
      "kind": "uups"
    },
    {
      "address": "0x6ccC38efC4D832cbb4837A189Feae21a6Cd2AFa6",
      "txHash": "0x29faa2205fa0a2f783104ce0dc06be1ec54af19ac46b4dfec790a0997ade7cf5",
      "kind": "uups"
    },
    {
      "address": "0x659961196c01f98E6d861325f24365bDb9cdC29a",
      "txHash": "0xce0e631a94df1b677bf6bb77611e75ac1929aba5f3a37efda38bb864e24c6d6d",
      "kind": "uups"
    },
    {
      "address": "0x49B0De085468749FBBb5721cC71987c69aB6Ca6b",
      "txHash": "0x0dc1ece5d9e7a5ae4b700203d141ebac3f64de87b6d66932882c20ad4c682a35",
      "kind": "uups"
    },
    {
      "address": "0x5E57d604E5C16fC29A6aB3044D048B9CBbCcc382",
      "txHash": "0x0e05a9aeb3e8d47e077910c6bad312268ee7b82ae29fd29a319d0badeeb1f3d0",
      "kind": "uups"
    },
    {
      "address": "0x82B243A3853Aace16ab9cCB148ce938383d13d33",
      "txHash": "0x7cc2e70b4b762fc38d4819877d321e36a168ba0fe7861c0acd3f53e9d67b5ee8",
      "kind": "uups"
    },
    {
      "address": "0x4F5ECEA710651Ebf8F69B730B8C058e8314beC6F",
      "txHash": "0x7dc405d2feb76ccf0244d52a15c23a2ff77b2d38af521192a8827e5332d7d5e8",
      "kind": "uups"
    },
    {
      "address": "0xdDC80331a1Cf00497eb98D5dee9eea0bc1647d87",
      "txHash": "0xc19b7196af269ce100e9ed42eabf50790c4e689c5181776ca3c95a9514c48570",
      "kind": "uups"
    },
    {
      "address": "0x46a9B1BF2A55Ab3ca0d39dd50449a21d633891e7",
      "txHash": "0x33c1fd1f114180e5c82c4c3dec7ccb4df57667f1f2e6c6a4259fcdd62c08608d",
      "kind": "uups"
    },
    {
      "address": "0x87F908FB4559e384703f6857223f7E0d990A890f",
      "txHash": "0xad6633edec5069dfd8dfffd3fc394185c629e390cc314628c19fccaea84a1132",
      "kind": "uups"
    },
    {
      "address": "0xCa2F60EFDA0104fab9ACfb892739012EcfebE54e",
      "txHash": "0x2f432408735a58b55bd77b7431e8251cbc7a6db7435de260b1c80e3474ea053d",
      "kind": "uups"
    },
    {
      "address": "0x8cd8d0d12f310819ffB7BA37cF111112509D86a7",
      "txHash": "0x9b8773d19ba39f9b9b7b52ba88aa94592005b601d9d50ae9357fd6836c087c65",
      "kind": "uups"
    },
    {
      "address": "0x01676Bb15530162933FbfF66028fF233AdE8d419",
      "txHash": "0x6f872cbc858daca9183673901e7303f774e5edd1ca9a9a70724fd8cc923a57ea",
      "kind": "uups"
    },
    {
      "address": "0x3C1E2AF7247713AEd3a57935487C0E77c26A4893",
      "txHash": "0x8c7846afb4fbe7f2cd7b1d5fef6cc1e682f133216369a281dacd6ebcb369f060",
      "kind": "uups"
    },
    {
      "address": "0xd55C71FAE6484Cb44Ee3328256df4f5959f1E683",
      "txHash": "0x2c42bc7e8478e4ef83f757fe142a33f83a2a49eee341738ad0e25bff686cb8b0",
      "kind": "uups"
    },
    {
      "address": "0x5B152F0D9771F4b4ac6b6d8246B37b7Fa0d87871",
      "txHash": "0xa1c239f2fd16041a0a0285d0900ea44a3e4d0d381d33a5f570a74164456d5eb0",
      "kind": "uups"
    },
    {
      "address": "0x5B5f616fCF86Ba46CD7505f6b55aA17BC0001a50",
      "txHash": "0x3ff18ad8349d5edf968e704cda8fe8d5e707e36591859e7e3da357c2434df969",
      "kind": "uups"
    },
    {
      "address": "0xcdc3Da32c894e2177f4A055f292741713165A118",
      "txHash": "0x7388850832b74cade9ef3440843a5d60d5ab0701f704674a2a6e1862590a4083",
      "kind": "uups"
    },
    {
      "address": "0x26E79fac6c8702f4d9E60e5cc1c44afB5941B7f6",
      "txHash": "0x3fcf1f9425ac4ba35e255695925506a7d80675872f1f88574868cfa64926ab82",
      "kind": "uups"
    },
    {
      "address": "0x4cf1B752086144a5eaae47362E183f6160Af9459",
      "txHash": "0x74b70b7086db2443981f59062f6fcd1068336b11fbba8a55a8d0397cf54601d1",
      "kind": "uups"
    },
    {
      "address": "0x3fe3Ffb089e0A6a3F1145Be0AEE0f693FA9738E6",
      "txHash": "0x84e1a35c1fd656e4167d7f7d7ba2e4eefcc99c68a51883b4d9d66beba293f7b3",
      "kind": "uups"
    },
    {
      "address": "0xcFb36e3bD95fAf5Ce1F20ACEa8289A191F68c2d2",
      "txHash": "0x844e03bc8e3e0ccd612888ba61883a0b2556f2cc239ee58b60065370379c1fa1",
      "kind": "uups"
    },
    {
      "address": "0xf562D10Eb4e0B9943be1555cC28B256088EBfA4D",
      "txHash": "0x6df41dd10f7de95f23022c1a3f07901c7f80c9e390473ae3c4fbe2a784aa703f",
      "kind": "uups"
    },
    {
      "address": "0x9FE2E0A2cB3cB9B48097C831b38865eb4afB08ab",
      "txHash": "0xd86bdac5bd9bc2eb1f7126b0ff19749854b34333a42f3ccf5950f548e2a33ae7",
      "kind": "uups"
    },
    {
      "address": "0xB31A0b6F6a2494AB751A3B15ea41C309b971CC0D",
      "txHash": "0x394cac45fa277b1537c6d63687c03d81b693610226e25d93118f030004063853",
      "kind": "uups"
    },
    {
      "address": "0x13F0b0581d364c395e21FBD7d4816F3305EAb59f",
      "txHash": "0x8039a267262626459715ce03c7fba2b1ffea4e4b512d00bbd16b14a31a5bbc77",
      "kind": "uups"
    },
    {
      "address": "0x2Cf49a2BdC3A4061C9fBC9dCDff82cD16A05C823",
      "txHash": "0x5ec0cee6eeda81a0e3561d13f8889e690aafcf119763a684849476024da95944",
      "kind": "uups"
    },
    {
      "address": "0xD4027a40dEecD7699b4581f8AfdA9a324Fd270e5",
      "txHash": "0xe2a1e4e112f25007341f74e3a33131bb4b3124b36c754a8fa94a97caccde8f26",
      "kind": "uups"
    },
    {
      "address": "0xC4F4Ce3c4E045b1A2461Cc38476B7D1ECD4b7DB8",
      "txHash": "0x9ebcf7e203d55fa4ed0b503b9d3243f7cebf223d86748ae14c5389ecff53db9c",
      "kind": "uups"
    },
    {
      "address": "0x4Cf4F44DCd75ba00856136a551B625d3391108D8",
      "txHash": "0x2ad0c3cd0c57e97dfe22d180cca66bdf4c7e042389add14d58a0df5bd3cf677d",
      "kind": "uups"
    },
    {
      "address": "0x1F1b188aDfd6206c83E236C228043ba3f9D3f239",
      "txHash": "0x5e6ffb0f099cfac177ba9d6db6f41ef8ace0a50c6ab7a980069d2526f8dbbef1",
      "kind": "uups"
    },
    {
      "address": "0xb2cf72856368C67260Da9c009c1fB17E29BF35eB",
      "txHash": "0xe39f939ba4b0c96d3b44a23f6153aaf237ac757df15fb08c4f2a731f5afc04c6",
      "kind": "uups"
    },
    {
      "address": "0xf6B45F218ACC7742e4cfc4B85423849E977E7B3c",
      "txHash": "0x702912c27190d5f27f07682c0fb493765045f41237e90e24a016241e105cee18",
      "kind": "uups"
    },
    {
      "address": "0x21F016714060a91C17f64469dD6bEe3C2fddCE1E",
      "txHash": "0x8eb83812e2acdac792d0e8b3fbc6afb188e38665209585bfb9e9c8002b42ac8b",
      "kind": "uups"
    },
    {
      "address": "0x074952F6D2E58540Bc9641D0c2196a22Ee3e3970",
      "txHash": "0xd76450dd5dcbe8397e6a48db1fe70d04faf796fa8a7583173b73d8d883c03c6b",
      "kind": "uups"
    },
    {
      "address": "0x4a2180A45E54E91467CB6B4D0618c3C3dd9e8f30",
      "txHash": "0xbc99f4d57f9c2be349b3f2112049165f83e490ac05a3190942a34ad3190e5dd7",
      "kind": "uups"
    },
    {
      "address": "0x3445a5FbFaeEd4c86d713e857B89eB2543f7d94F",
      "txHash": "0xa7e6aad5163a989bc3746e688dd8fdc75337d8090b34a522fe52926e20f1ccb6",
      "kind": "uups"
    },
    {
      "address": "0xFb3404E08E225471AceF9BE0C1696869dFEf9c07",
      "txHash": "0x78dee2eea8cbc57c22aab714ee013227596b48f07da9377bf68a171d5bf4b36b",
      "kind": "uups"
    },
    {
      "address": "0xb7753E5Ad76B6d7C9F6B99f6b787B9b1934Ea092",
      "txHash": "0xf4aea6600fa3500c631e6ea14e8ff8e927a4289b01b99951961714a1f0b20ab1",
      "kind": "uups"
    },
    {
      "address": "0xa78EC9b478bD2a6eA861A073AC2D9516DF3b50Fb",
      "txHash": "0xca6adf677a094a5bab2fd7088401810b8602e3e98254fb103564d250a2f4c432",
      "kind": "uups"
    },
    {
      "address": "0x052e9C3611151c901d92F6C9A0ac1391454D907b",
      "txHash": "0x3c2f076aecc439f6b7ada8fab982aeadca424ad4bb71497cdeaa0bcd499d239f",
      "kind": "uups"
    },
    {
      "address": "0xf1F1c5dC3A8279a366FBa623F2C8E55A9d1B49bC",
      "txHash": "0x5dd9426d0c23ca355f8271f04b8be0aca39cc9d8a178c5eff38a755e899c8556",
      "kind": "uups"
    },
    {
      "address": "0xBc20406D1774f57bFA75EE6F1de6782143249c63",
      "txHash": "0x157eebaf6d49801ed4758d18ce6e0c7043fda30e44c6604c41e6df3d50a9fe1b",
      "kind": "uups"
    },
    {
      "address": "0x8BC8D1c42Eb34090289f6074cb110eA1863776D2",
      "txHash": "0xbfda96cc05dc305308872314ae978d2a58d94fefb29fc34df5cad08853171380",
      "kind": "uups"
    },
    {
      "address": "0xa03df2c028FF3bf6023ACDA0fcF68D9F0B0ddAa9",
      "txHash": "0x50ccc6968d92570445c8dd471c33e541e5147133ec323c51d5abfef5c7d33770",
      "kind": "uups"
    },
    {
      "address": "0xD8429faa8CB82309C9cC49075424F2cD4fFc73D6",
      "txHash": "0xbf4fe7e328f938dd5c5741c6edb4fcd08a1183f5395d4847194015c398cf7771",
      "kind": "uups"
    },
    {
      "address": "0x8B310d826e8aADdFf60294C28C46171170312cB7",
      "txHash": "0x3e0b36167f43348e2321e2bf21dac1b3872e904b1a798ab26fb5ff8cdd747544",
      "kind": "uups"
    },
    {
      "address": "0x06C39f785305DBa4ead0d07eD7bD2ACcb3229d9F",
      "txHash": "0xdede441648caddcca5e78b3228b1abd273984e2bdaf85abd566c3cc57b8c9d00",
      "kind": "uups"
    }
  ],
  "impls": {
    "5436a8d49916a9c566193d04aad4f90df09187a38039af0a0d0236156e597b8e": {
      "address": "0xDcD8988A0FcAb79844eb1b31cB03b7720E3fEDfd",
      "txHash": "0x5608c0367a34e2ed8893bc0469af462ae618dcf9be19787f184205cdeceec4e5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13385",
            "contract": "Fees",
            "src": "contracts/Fees.sol:27"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10553",
            "contract": "Fees",
            "src": "contracts/Fees.sol:28"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Liquidity)8791",
            "contract": "Fees",
            "src": "contracts/Fees.sol:29"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeRoles)6083,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:64"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_enum(FeeType)6071,t_struct(Fee)6094_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8791": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10553": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13385": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)6074": {
            "label": "enum Fees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)6083": {
            "label": "enum Fees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)6071": {
            "label": "enum Fees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)6083,t_address_payable)": {
            "label": "mapping(enum Fees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)6083,t_uint256)": {
            "label": "mapping(enum Fees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)6071,t_struct(Fee)6094_storage)": {
            "label": "mapping(enum Fees.FeeType => struct Fees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)6094_storage": {
            "label": "struct Fees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)6074",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)6083,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "15b69ce665b832f004cee2d19ea1cfae478c961fee9b22998a4596730eb6a9f6": {
      "address": "0xb340092497a1956561283cc32573617AEe736a1A",
      "txHash": "0x12570747dd9f0211c4892aa29756901ef6150eabcf6049888c5bbe3168e34d17",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13296",
            "contract": "Fees",
            "src": "contracts/Fees.sol:30"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10463",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Liquidity)8700",
            "contract": "Fees",
            "src": "contracts/Fees.sol:32"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:34"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeRoles)14512,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:36"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_enum(FeeType)14500,t_struct(Fee)14523_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8700": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10463": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13296": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)14503": {
            "label": "enum IFees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)14512": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)14500": {
            "label": "enum IFees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14512,t_address_payable)": {
            "label": "mapping(enum IFees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14512,t_uint256)": {
            "label": "mapping(enum IFees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)14500,t_struct(Fee)14523_storage)": {
            "label": "mapping(enum IFees.FeeType => struct IFees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)14523_storage": {
            "label": "struct IFees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)14503",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)14512,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d97d792365305337e19c562aef6804ced38cd2a856d3950c7b29d1704ff696c6": {
      "address": "0x819838d50187092c32522AF619E36d1846B1C9BF",
      "txHash": "0x7cc69d81026af9c083d77ef68d71e5624f1d1fe0c987eccaff7d928c86f1f488",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13296",
            "contract": "Fees",
            "src": "contracts/Fees.sol:30"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10463",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Liquidity)8700",
            "contract": "Fees",
            "src": "contracts/Fees.sol:32"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:34"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeRoles)14512,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:36"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_enum(FeeType)14500,t_struct(Fee)14523_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8700": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10463": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13296": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)14503": {
            "label": "enum IFees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)14512": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)14500": {
            "label": "enum IFees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14512,t_address_payable)": {
            "label": "mapping(enum IFees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14512,t_uint256)": {
            "label": "mapping(enum IFees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)14500,t_struct(Fee)14523_storage)": {
            "label": "mapping(enum IFees.FeeType => struct IFees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)14523_storage": {
            "label": "struct IFees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)14503",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)14512,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5e7465c636c4c34d18977c36a4ac5c8557dfdc8d133d7106aee8e69dcb2567aa": {
      "address": "0x78610876A60A914e5f03b0aCA95DDfa7Fde9d3f1",
      "txHash": "0x7793c7a5997c3e1f27f40690d24ec8ee9359667b08137aa198a25a5b551f2fec",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13308",
            "contract": "Fees",
            "src": "contracts/Fees.sol:30"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10474",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Liquidity)8710",
            "contract": "Fees",
            "src": "contracts/Fees.sol:32"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:34"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeRoles)14526,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:36"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_enum(FeeType)14514,t_struct(Fee)14537_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8710": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10474": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13308": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)14517": {
            "label": "enum IFees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)14526": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)14514": {
            "label": "enum IFees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14526,t_address_payable)": {
            "label": "mapping(enum IFees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14526,t_uint256)": {
            "label": "mapping(enum IFees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)14514,t_struct(Fee)14537_storage)": {
            "label": "mapping(enum IFees.FeeType => struct IFees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)14537_storage": {
            "label": "struct IFees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)14517",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)14526,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eb24d4cc824f2e608e73d34c9817ff6e250295dcf307f7252328f2acc53f358d": {
      "address": "0x10cAA3E183a5b7D88f5DF90d8bd5deD600296b17",
      "txHash": "0x0d305f645b092d37f091036e60acb44ad73d4418f92daca227165525e71947ad",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13178",
            "contract": "Fees",
            "src": "contracts/Fees.sol:30"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Liquidity)8580",
            "contract": "Fees",
            "src": "contracts/Fees.sol:31"
          },
          {
            "label": "maxFeeIncrease",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "Fees",
            "src": "contracts/Fees.sol:33"
          },
          {
            "label": "roleAddresses",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_enum(FeeRoles)14486,t_address_payable)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:35"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_enum(FeeType)14474,t_struct(Fee)14497_storage)",
            "contract": "Fees",
            "src": "contracts/Fees.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Liquidity)8580": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13178": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeMathType)14477": {
            "label": "enum IFees.FeeMathType",
            "members": [
              "FIXED",
              "PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeRoles)14486": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeType)14474": {
            "label": "enum IFees.FeeType",
            "members": [
              "StakeEntry",
              "StakeRewards",
              "StakePool",
              "StakeValidator",
              "LiquidityProvideEntry",
              "LiquidityProvide"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14486,t_address_payable)": {
            "label": "mapping(enum IFees.FeeRoles => address payable)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14486,t_uint256)": {
            "label": "mapping(enum IFees.FeeRoles => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeType)14474,t_struct(Fee)14497_storage)": {
            "label": "mapping(enum IFees.FeeType => struct IFees.Fee)",
            "numberOfBytes": "32"
          },
          "t_struct(Fee)14497_storage": {
            "label": "struct IFees.Fee",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "mathType",
                "type": "t_enum(FeeMathType)14477",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocations",
                "type": "t_mapping(t_enum(FeeRoles)14486,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "85b0f81a9b5898834022ce703be7f81c4362cf643eaea6085684a9df6869a030": {
      "address": "0x86dE474b980E331D49883D21A7628e30F91B2cdA",
      "txHash": "0x822919d6d9a17c1309cd5225cb337b92fb5d3105e16d886b15137318b132c526",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)13194",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:29"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)10360",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:30"
          },
          {
            "label": "airdropsMerkleRoots",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_enum(FeeRoles)14502,t_mapping(t_uint256,t_bytes32))",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:92"
          },
          {
            "label": "claimedBitMap",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_enum(FeeRoles)14502,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:93"
          },
          {
            "label": "maxBatchSize",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "Airdrop",
            "src": "contracts/Airdrop.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Router)10360": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)13194": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_enum(FeeRoles)14502": {
            "label": "enum IFees.FeeRoles",
            "members": [
              "StakeAccounts",
              "LockAccounts",
              "Pools",
              "Operators",
              "Oracles",
              "StakeTogether",
              "LiquidityProviders",
              "Sender"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14502,t_mapping(t_uint256,t_bytes32))": {
            "label": "mapping(enum IFees.FeeRoles => mapping(uint256 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(FeeRoles)14502,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
            "label": "mapping(enum IFees.FeeRoles => mapping(uint256 => mapping(uint256 => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "db2e72805d4ac8a7d6dd85505e706c1cc75c6125cc9e9d226abb60c05519694d": {
      "address": "0xF5f5522ec5f694C512Ccf7957d2F9b572e4c6d61",
      "txHash": "0x6e076b80b62c5842951b32432d8d012e6c875723f1329fb0cc6216ab444068e3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(StakeTogether)12942",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:37"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Router)10095",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:38"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Fees)7008",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:39"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Config)14332_storage",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:40"
          },
          {
            "label": "withdrawalsShares",
            "offset": 0,
            "slot": "563",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:123"
          },
          {
            "label": "totalWithdrawalsShares",
            "offset": 0,
            "slot": "564",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:124"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "565",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:125"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "566",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:264"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "567",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:265"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "568",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:266"
          },
          {
            "label": "totalLiquidityWithdrawn",
            "offset": 0,
            "slot": "569",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:267"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10095": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12942": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14332_storage": {
            "label": "struct ILiquidity.Config",
            "members": [
              {
                "label": "enableLiquidity",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "enableDeposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "withdrawalLiquidityLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "blocksInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0d60179776e76fcd112c04acd54eb049f6b84d6c219a399cc7b674a925fabd7d": {
      "address": "0x0FAac9B115955e55b77D7ecABd4954B8E1D86396",
      "txHash": "0xfdf24d8aa7912f9c5223a08db20e20cc8e89b964a62de54c43c70324a7f7994d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(StakeTogether)12942",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:37"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "555",
            "type": "t_contract(Router)10095",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:38"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "556",
            "type": "t_contract(Fees)7008",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:39"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "557",
            "type": "t_struct(Config)14332_storage",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:40"
          },
          {
            "label": "withdrawalsShares",
            "offset": 0,
            "slot": "563",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:123"
          },
          {
            "label": "totalWithdrawalsShares",
            "offset": 0,
            "slot": "564",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:124"
          },
          {
            "label": "allowances",
            "offset": 0,
            "slot": "565",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:125"
          },
          {
            "label": "lastResetBlock",
            "offset": 0,
            "slot": "566",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:264"
          },
          {
            "label": "totalDeposited",
            "offset": 0,
            "slot": "567",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:265"
          },
          {
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "568",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:266"
          },
          {
            "label": "totalLiquidityWithdrawn",
            "offset": 0,
            "slot": "569",
            "type": "t_uint256",
            "contract": "Liquidity",
            "src": "contracts/Liquidity.sol:267"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Router)10095": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12942": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14332_storage": {
            "label": "struct ILiquidity.Config",
            "members": [
              {
                "label": "enableLiquidity",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "enableDeposit",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "depositLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawalLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "withdrawalLiquidityLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "blocksInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "80ab1c4eec6c27da95204df4609d767bcaefb8f818432d7254bf347f6cdc386c": {
      "address": "0xD0EB6dDA84e2a96414603C89c2c54c4E5C479231",
      "txHash": "0x1fff11f5716a5a9a3141a59e2fd7b0ff5a4b24c29ac2d17950d76cfd23948f51",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12757",
            "contract": "Validators",
            "src": "contracts/Validators.sol:34"
          },
          {
            "label": "routerContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Router)9892",
            "contract": "Validators",
            "src": "contracts/Validators.sol:35"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Fees)7008",
            "contract": "Validators",
            "src": "contracts/Validators.sol:36"
          },
          {
            "label": "depositContract",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(IDepositContract)13970",
            "contract": "Validators",
            "src": "contracts/Validators.sol:37"
          },
          {
            "label": "validatorOracles",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Validators",
            "src": "contracts/Validators.sol:105"
          },
          {
            "label": "currentOracleIndex",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "Validators",
            "src": "contracts/Validators.sol:106"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "contract": "Validators",
            "src": "contracts/Validators.sol:163"
          },
          {
            "label": "totalValidators",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "Validators",
            "src": "contracts/Validators.sol:164"
          },
          {
            "label": "validatorSize",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "Validators",
            "src": "contracts/Validators.sol:165"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(IDepositContract)13970": {
            "label": "contract IDepositContract",
            "numberOfBytes": "20"
          },
          "t_contract(Router)9892": {
            "label": "contract Router",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12757": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes"
          }
        }
      }
    },
    "cbca208d2d1492fad4467e8354599e167bfdf1067c4d07b7cb2ea2257eef4698": {
      "address": "0xBAAD985fF2b6c28A4f35AEF3b7AeA9F40Fb49C65",
      "txHash": "0x049896c481f9ef78cbf7b0c918ffae3745b3a149fc4ca5219b377d4923c3ab72",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "304",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_struct(Counter)2698_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(StakeTogether)12757",
            "contract": "Withdrawals",
            "src": "contracts/Withdrawals.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(StakeTogether)12757": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2698_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2698_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4edea6bf79dad385cf32d04215e009e6693e353ed28778b9fafa612edeb10a6b": {
      "address": "0x5e1f7648fe2bA946a28d455799A8C7f3A95f45Dc",
      "txHash": "0xa966f65971c36677896797cd08be35b45131141fb5c488cf401f91cf5ac7925e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12663",
            "contract": "Router",
            "src": "contracts/Router.sol:37"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Fees)7008",
            "contract": "Router",
            "src": "contracts/Router.sol:38"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Withdrawals)13745",
            "contract": "Router",
            "src": "contracts/Router.sol:39"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(Liquidity)8331",
            "contract": "Router",
            "src": "contracts/Router.sol:40"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(Airdrop)5956",
            "contract": "Router",
            "src": "contracts/Router.sol:41"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(Validators)13369",
            "contract": "Router",
            "src": "contracts/Router.sol:42"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "357",
            "type": "t_struct(Config)14068_storage",
            "contract": "Router",
            "src": "contracts/Router.sol:43"
          },
          {
            "label": "totalReportOracles",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:127"
          },
          {
            "label": "reportOracles",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:128"
          },
          {
            "label": "reportOraclesBlacklist",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:129"
          },
          {
            "label": "oracleReports",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "Router",
            "src": "contracts/Router.sol:221"
          },
          {
            "label": "oracleReportsVotes",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "Router",
            "src": "contracts/Router.sol:222"
          },
          {
            "label": "executedReports",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "Router",
            "src": "contracts/Router.sol:223"
          },
          {
            "label": "reportHistoric",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "contract": "Router",
            "src": "contracts/Router.sol:224"
          },
          {
            "label": "consensusReport",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Router",
            "src": "contracts/Router.sol:225"
          },
          {
            "label": "consensusInvalidatedReport",
            "offset": 0,
            "slot": "372",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:226"
          },
          {
            "label": "reportBlockNumber",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:228"
          },
          {
            "label": "lastConsensusEpoch",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:229"
          },
          {
            "label": "lastExecutedConsensusEpoch",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:230"
          },
          {
            "label": "reportExecutionBlock",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:232"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5956": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8331": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12663": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13369": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13745": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14068_storage": {
            "label": "struct IRouter.Config",
            "members": [
              {
                "label": "bunkerMode",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxValidatorsToExit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minBlocksBeforeExecution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minReportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "oracleBlackListLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "reportBlockFrequency",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8c1c89613cda3bda4c859d93ade93beb925c787bf1940ff65d694fe3c3e30f10": {
      "address": "0xAD4A1C06D8e5C100030eb26373d86FD0305F823c",
      "txHash": "0x9b00fb977ea6d466607bf8dadb2b59efeb7d06fe5936acf5e025955f64d58f60",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeTogether",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(StakeTogether)12663",
            "contract": "Router",
            "src": "contracts/Router.sol:37"
          },
          {
            "label": "feesContract",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(Fees)7008",
            "contract": "Router",
            "src": "contracts/Router.sol:38"
          },
          {
            "label": "withdrawalsContract",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(Withdrawals)13745",
            "contract": "Router",
            "src": "contracts/Router.sol:39"
          },
          {
            "label": "liquidityContract",
            "offset": 0,
            "slot": "354",
            "type": "t_contract(Liquidity)8331",
            "contract": "Router",
            "src": "contracts/Router.sol:40"
          },
          {
            "label": "airdropContract",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(Airdrop)5956",
            "contract": "Router",
            "src": "contracts/Router.sol:41"
          },
          {
            "label": "validatorsContract",
            "offset": 0,
            "slot": "356",
            "type": "t_contract(Validators)13369",
            "contract": "Router",
            "src": "contracts/Router.sol:42"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "357",
            "type": "t_struct(Config)14068_storage",
            "contract": "Router",
            "src": "contracts/Router.sol:43"
          },
          {
            "label": "totalReportOracles",
            "offset": 0,
            "slot": "364",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:127"
          },
          {
            "label": "reportOracles",
            "offset": 0,
            "slot": "365",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:128"
          },
          {
            "label": "reportOraclesBlacklist",
            "offset": 0,
            "slot": "366",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:129"
          },
          {
            "label": "oracleReports",
            "offset": 0,
            "slot": "367",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "Router",
            "src": "contracts/Router.sol:221"
          },
          {
            "label": "oracleReportsVotes",
            "offset": 0,
            "slot": "368",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))",
            "contract": "Router",
            "src": "contracts/Router.sol:222"
          },
          {
            "label": "executedReports",
            "offset": 0,
            "slot": "369",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))",
            "contract": "Router",
            "src": "contracts/Router.sol:223"
          },
          {
            "label": "reportHistoric",
            "offset": 0,
            "slot": "370",
            "type": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)",
            "contract": "Router",
            "src": "contracts/Router.sol:224"
          },
          {
            "label": "consensusReport",
            "offset": 0,
            "slot": "371",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "Router",
            "src": "contracts/Router.sol:225"
          },
          {
            "label": "consensusInvalidatedReport",
            "offset": 0,
            "slot": "372",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Router",
            "src": "contracts/Router.sol:226"
          },
          {
            "label": "reportBlockNumber",
            "offset": 0,
            "slot": "373",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:228"
          },
          {
            "label": "lastConsensusEpoch",
            "offset": 0,
            "slot": "374",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:229"
          },
          {
            "label": "lastExecutedConsensusEpoch",
            "offset": 0,
            "slot": "375",
            "type": "t_uint256",
            "contract": "Router",
            "src": "contracts/Router.sol:230"
          },
          {
            "label": "reportExecutionBlock",
            "offset": 0,
            "slot": "376",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Router",
            "src": "contracts/Router.sol:232"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Airdrop)5956": {
            "label": "contract Airdrop",
            "numberOfBytes": "20"
          },
          "t_contract(Fees)7008": {
            "label": "contract Fees",
            "numberOfBytes": "20"
          },
          "t_contract(Liquidity)8331": {
            "label": "contract Liquidity",
            "numberOfBytes": "20"
          },
          "t_contract(StakeTogether)12663": {
            "label": "contract StakeTogether",
            "numberOfBytes": "20"
          },
          "t_contract(Validators)13369": {
            "label": "contract Validators",
            "numberOfBytes": "20"
          },
          "t_contract(Withdrawals)13745": {
            "label": "contract Withdrawals",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(uint256 => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bool))": {
            "label": "mapping(uint256 => mapping(bytes32 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_uint256))": {
            "label": "mapping(uint256 => mapping(bytes32 => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(Config)14068_storage": {
            "label": "struct IRouter.Config",
            "members": [
              {
                "label": "bunkerMode",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxValidatorsToExit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minBlocksBeforeExecution",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "minReportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reportOracleQuorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "oracleBlackListLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "reportBlockFrequency",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
